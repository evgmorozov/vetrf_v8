


Процедура ПриОткрытии()
	ЭлементыФормы.ВыбТермическиеУсловия.СписокВыбора.Добавить(1, "Замороженный");
	ЭлементыФормы.ВыбТермическиеУсловия.СписокВыбора.Добавить(2, "Охлажденный");
	ЭлементыФормы.ВыбТермическиеУсловия.СписокВыбора.Добавить(3, "Охлаждаемый");
	ЭлементыФормы.ВыбТермическиеУсловия.СписокВыбора.Добавить(4, "Вентилируемый");
	ВыбТермическиеУсловия = 1;
	// в ТЧ
	ЭлементыФормы.ВСДЭлементы.Колонки.ТермическиеУсловияПеревозки.ЭлементУправления.СписокВыбора.Добавить(1, "Замороженный");
	ЭлементыФормы.ВСДЭлементы.Колонки.ТермическиеУсловияПеревозки.ЭлементУправления.СписокВыбора.Добавить(2, "Охлажденный");
	ЭлементыФормы.ВСДЭлементы.Колонки.ТермическиеУсловияПеревозки.ЭлементУправления.СписокВыбора.Добавить(3, "Охлаждаемый");
	ЭлементыФормы.ВСДЭлементы.Колонки.ТермическиеУсловияПеревозки.ЭлементУправления.СписокВыбора.Добавить(4, "Вентилируемый");
	
	Если Организация.Пустая() Тогда
		Организация   = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;	
	Обработка = ВСД.ИнициализацияОбработки(Организация);
	Если типЗнч(Обработка) = Тип("Строка") тогда
		Отправитель_ХозСубъект = "";
		Отправитель_Площадка = "";
		Сообщить("Не удалось инициализировать обработку Интеграция");
		Возврат;
	КонецЕсли;
	Отправитель_ХозСубъект = Обработка.Отправитель_ХозСубъект;
	Отправитель_Площадка = Обработка.Отправитель_Площадка;
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	//Возврат;
	Обработка = ВСД.ИнициализацияОбработки(Организация);
	Если типЗнч(Обработка) = Тип("Строка") тогда
		Отправитель_ХозСубъект = "";
		Отправитель_Площадка = "";
		Сообщить("Не удалось инициализировать обработку Интеграция");
		Возврат;
	КонецЕсли;
	
	Отправитель_ХозСубъект = Обработка.Отправитель_ХозСубъект;
	Отправитель_Площадка = Обработка.Отправитель_Площадка;
КонецПроцедуры

Процедура Отправитель_ПлощадкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
   	ФормаВыбора =  Справочники.ВСД_Площадка.ПолучитьФормуВыбора(, Элемент);
    ФормаВыбора.РежимВыбора = Истина;
    ФормаВыбора.Отбор.GuidХозСубъекта.Установить(Отправитель_ХозСубъект.GUID, Истина);
    ФормаВыбора.Открыть();
КонецПроцедуры

Процедура УстановитьПометки()
	Для Каждого стр Из ВСДЭлементы Цикл
		Если ЗначениеЗаполнено(стр.GUID) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ(стр.Отметка) Тогда 
			стр.Отметка = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СнятьПометки()
	Для Каждого стр Из ВСДЭлементы Цикл
		Если (стр.Отметка) Тогда 
			стр.Отметка = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура КнЗаполнитьНажатие(Элемент)
	ЗаполнитьНоменклатуруВТЗ();
КонецПроцедуры

Процедура КнСоздатьНажатие(Элемент)
	ТекстВопроса = "Будут созданы элементы справочника ВСД_Продукция_Элемент
	|Установлено соответствие с Номенклатурой
	|Отправлен запрос в Меркурий на создание Наименований продукции
	|по площадке "+Отправитель_Площадка;
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
    	Возврат;
	КонецЕсли;
	СоздатьВСДЭлементы();
КонецПроцедуры

Процедура Отправитель_ПлощадкаПриИзменении(Элемент)
	//ВСДЭлементы.Очистить();
КонецПроцедуры

Процедура ВСДЭлементыПередНачаломИзменения(Элемент, Отказ)
	Если ЗначениеЗаполнено(ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.GUID) Тогда
		//Отказ = true;
		//ОткрытьФорму(Элемент);
	ИначеЕсли ЗначениеЗаполнено(ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент) Тогда
		Если НЕ(ЭлементыФормы.ВСДЭлементы.ТекущаяКолонка.Имя = "Отметка") Тогда
			Отказ = true;	
		КонецЕсли
	КонецЕсли;
КонецПроцедуры

Процедура ВСДЭлементыПередНачаломДобавления(Элемент, Отказ, Копирование)
	//Добавляйте 1 элемент через Интеграцию
	Отказ = true;
КонецПроцедуры

Процедура ВСДЭлементыНоменклатураПриИзменении(Элемент)
	ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент = ВСД.Получить_ВСД_Продукция_Элемент(ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Номенклатура); //Проверим на наличие соответствия
	ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция = ?(ЗначениеЗаполнено(ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент),ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент.Продукция,ВыбПродукция);
	ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.ВидПродукции = ?(ЗначениеЗаполнено(ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент),ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент.ВидПродукции,ВыбВидПродукции);
	ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.ЕдиницаИзмерения = ?(ЗначениеЗаполнено(ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент),ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент.ЕдиницаИзмерения,ВыбЕдиницаИзмерения);
	ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.СрокГодности = ?(ЗначениеЗаполнено(ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент),ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент.СрокГодности,ВыбСрокГодности);
	ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.ТермическиеУсловияПеревозки = ?(ЗначениеЗаполнено(ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент),ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент.ТермическиеУсловияПеревозки,ВыбТермическиеУсловия);
	ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.GUID = ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.Продукция_Элемент.GUID;
КонецПроцедуры

Процедура ВСДЭлементыПродукцияПриИзменении(Элемент)
	ЭлементыФормы.ВСДЭлементы.ТекущиеДанные.ВидПродукции = "";
КонецПроцедуры

Процедура ВСДЭлементыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если НЕ ПустаяСтрока(ДанныеСтроки.GUID)Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(0, 150, 26);   //
	ИначеЕсли ЗначениеЗаполнено(ДанныеСтроки.Продукция_Элемент) Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(255,255,127);   //желтый
	Иначе
		ОформлениеСтроки.ЦветФона = Новый Цвет(255,120,90);   //красный
	КонецЕсли;
	
КонецПроцедуры

Процедура КнИзменитьНажатие(Элемент)
	ТекстВопроса = "Будет отправлен запрос в Меркурий на изменение выбранной продукции
	|по площадке "+Отправитель_Площадка;
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
    	Возврат;
	КонецЕсли;
	ИзменитьВСДЭлементы();

КонецПроцедуры


// Запретить редактировать строки ТЧ с созданным элементом !!!!

