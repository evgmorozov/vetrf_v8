&НаСервере
Функция ПолучитьИмяОбработкиНаСервере(ИспользоватьВнешнююОбработку)
	_Организация   = ВСД.ПолучитьОрганизациюПоУмолчанию();
	СписокКонстант = ВСД.ЗагрузитьПараметры( _Организация );
	//КаталогИнтеграции = Строка(СписокКонстант.Получить("КаталогИнтеграции"));
	//Возврат КаталогИнтеграции+"Интеграция_ГИС_Меркурий.epf";
	ИспользоватьВнешнююОбработку = СписокКонстант.Получить("ИспользоватьВнешнююОбработку");
	Если НЕ ЗначениеЗаполнено( ИспользоватьВнешнююОбработку ) Тогда 
		ИспользоватьВнешнююОбработку =Ложь;
	КонецЕсли;
	возврат Строка(СписокКонстант.Получить("ПолноеИмяФайлаОбработки"));
КонецФункции

&НаСервере
Функция ПодключитьВнешнююОбработку(АдресХранилища)
	Попытка
    	Возврат ВнешниеОбработки.Подключить(АдресХранилища,,Ложь);
	Исключение
	    Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецФункции  

#Если ТонкийКлиент Тогда
&НаКлиенте	
Процедура ОткрытьОбработкуОбычноеПриложение(ПолноеИмяФайлаОбработки) 
КонецПроцедуры

#Иначе
&НаКлиенте	
Процедура ОткрытьОбработкуОбычноеПриложение(ПолноеИмяФайлаОбработки) 
	Внешняя = ВнешниеОбработки.Создать(ПолноеИмяФайлаОбработки);
	Внешняя.ПолучитьФорму().Открыть();
КонецПроцедуры
#КонецЕсли

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИспользоватьВнешнююОбработку = "";
	ПолноеИмяФайлаОбработки = ПолучитьИмяОбработкиНаСервере( ИспользоватьВнешнююОбработку ); 
	
	Если ИспользоватьВнешнююОбработку Тогда 		
		ФайлНаДиске = Новый Файл(ПолноеИмяФайлаОбработки);
		ЕстьФайлОбработки = Истина;
		Если Не ФайлНаДиске.Существует() Тогда
			ЕстьФайлОбработки = Ложь;
	        //Сообщить("Не существует обработка печати "+Адресобработки);
		КонецЕсли;	
		
		Если (НЕ ЗначениеЗаполнено(ПолноеИмяФайлаОбработки)) тогда
			Сообщить("Не удалось получить настройки для запуска обработок");
			СтрокаСообщения = "1. Проверьте в Настройках Пользователя 1С значение Организация по Умолчанию
			|2. Запустите Обработку Интеграции через меню Файл - > Открыть, Заполните и сохраните Параметры.
			|3. Повторите попытку.";
			Возврат;
		ИначеЕсли НЕ ЕстьФайлОбработки Тогда
			СтрокаСообщения = "Обработка Интеграции не найдена по адресу: "+ПолноеИмяФайлаОбработки;
			Сообщить(СтрокаСообщения);			
			Возврат;
		иначе
			Если ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
				Попытка
					ОткрытьОбработкуОбычноеПриложение(ПолноеИмяФайлаОбработки);
					//Внешняя = ВнешниеОбработки.Создать(ПолноеИмяФайлаОбработки);
					//Внешняя.ПолучитьФорму().Открыть();
					Отказ = Истина;
				Исключение
					СтрокаСообщения = "Не удалось запустить "+ПолноеИмяФайлаОбработки+"
					|Обратитесь в техподдержку http://www.kb99.pro";
					Сообщить(СтрокаСообщения);
				КонецПопытки;
			Иначе
			    АдресХранилища = "";
	 		   	Результат = ПоместитьФайл(АдресХранилища, ПолноеИмяФайлаОбработки, , Ложь);           
			    ИмяОбработки = ПодключитьВнешнююОбработку(АдресХранилища);
				Попытка
					ОткрытьФорму("ВнешняяОбработка.Интеграция_ГИС_Меркурий.Форма.ФормаУФ");
					Отказ = Истина;
				Исключение
					СтрокаСообщения = "Не удалось запустить "+ПолноеИмяФайлаОбработки+"
					|Обратитесь в техподдержку http://www.kb99.pro";
					Сообщить(СтрокаСообщения);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;	
	Иначе
		// Обработка.Меркурий_Интеграция
		Попытка 
			ОткрытьФорму("Обработка.Интеграция_ГИС_Меркурий.Форма", );				
		Исключение
			ОткрытьФорму("Обработка.Интеграция_ГИС_Меркурий.ФормаУФ", );	
		КонецПопытки;
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры
