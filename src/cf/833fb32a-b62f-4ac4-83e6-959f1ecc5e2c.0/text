
Функция НайтиХозСубъект(Контрагент) Экспорт

	Если НЕ(ЗначениеЗаполнено(Контрагент)) Тогда
		Возврат "";
	КонецЕсли;	
	
	//стандартное поведение функции	
	ВыбКонтрагент = Контрагент.ГоловнойКонтрагент;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВСД_ХозСубъект.Ссылка
	                      |ИЗ
	                      |	Справочник.ВСД_ХозСубъект КАК ВСД_ХозСубъект
	                      |ГДЕ
	                      |	ВСД_ХозСубъект.Контрагент = &ВыбКонтрагент");
	Запрос.УстановитьПараметр("ВыбКонтрагент", ВыбКонтрагент );
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда 
		Ответ = Результат.Ссылка;
	Иначе
		СпрХС = Справочники.ВСД_ХозСубъект.СоздатьЭлемент();
		СпрХС.Наименование = ВыбКонтрагент.Наименование;
		СпрХС.Контрагент = ВыбКонтрагент;
		СпрХС.Записать();
		Сообщить("Создан новый элемент справочника ВСД_ХозСубъект: "+ВыбКонтрагент);
		
		Ответ = спрХС.Ссылка;
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции

Функция НайтиПлощадкуПоКонтрагенту(ВыбКонтрагент) Экспорт
	Если НЕ(ЗначениеЗаполнено(ВыбКонтрагент)) Тогда
		Возврат "";
	КонецЕсли;	
		
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВСД_Площадка.Ссылка
	                      |ИЗ
	                      |	Справочник.ВСД_Площадка КАК ВСД_Площадка
	                      |ГДЕ
	                      |	ВСД_Площадка.Контрагент = &ВыбКонтрагент");
	Запрос.УстановитьПараметр("ВыбКонтрагент", ВыбКонтрагент );
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда 
		Ответ = Результат.Ссылка;
	Иначе
		Ответ = "";
	КонецЕсли;

	Возврат Ответ;
КонецФункции

Функция НайтиКонтрагентаОрганизации(ВыбОрганизация) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидСвязи"  , Перечисления.ВидыСобственныхКонтрагентов.Организация);
	Запрос.УстановитьПараметр("Основание" , ВыбОрганизация);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|   Контрагент
	|ИЗ
	|   РегистрСведений.СобственныеКонтрагенты 
	|ГДЕ Объект     = &Основание
	|    И ВидСвязи = &ВидСвязи";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Контрагент;
	Иначе
		Возврат "";
	КонецЕсли;
		
	
КонецФункции

//выбираем партию, которая подходит под условия отбора: количество, свойство, площадка
Функция ВыбратьПартию(Продукция_Элемент, Отправитель_Площадка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВСД_Партия.Ссылка
	               |ИЗ
	               |	Справочник.ВСД_Партия КАК ВСД_Партия
	               |ГДЕ
	               |	ВСД_Партия.Получатель_Площадка = &Отправитель_Площадка
	               |	И ВСД_Партия.Продукция_Элемент = &Продукция_Элемент
	               |	И ВСД_Партия.Количество > 0
	               |	И ВСД_Партия.ПометкаУдаления = ЛОЖЬ";
				   
	Запрос.УстановитьПараметр("Отправитель_Площадка"  , Отправитель_Площадка);
	Запрос.УстановитьПараметр("Продукция_Элемент" , Продукция_Элемент);
				   
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

//Процедура находит ВСД на основании ДокОснование
Функция НайтиВСД_транзакция(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование" , ДокументОснование);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВСД_транзакция.Ссылка
	               |ИЗ
	               |	Документ.ВСД_транзакция КАК ВСД_транзакция
	               |ГДЕ
	               |	ВСД_транзакция.ДокументОснование = &ДокументОснование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

//Процедура находит ВСД на основании ДокОснование
Функция НайтиВСД(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование" , ДокументОснование);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВСД.Ссылка,
	               |	ВСД.UUID
	               |ИЗ
	               |	Документ.ВСД КАК ВСД
	               |ГДЕ
	               |	ВСД.ДокументОснование = &ДокументОснование";
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Возврат Выборка;
	//Если Выборка.Следующий() Тогда
	//	Возврат Выборка.Ссылка;
	//Иначе
	//	Возврат "";
	//КонецЕсли;
	
КонецФункции


Функция ОтправитьВГис(ДокОснование) Экспорт
    ВСД_транзакция = НайтиВСД_транзакция(ДокОснование);
	
	Обработка = ИнициализацияОбработки( ДокОснование.Организация );
	Обработка.Отправить_ВСД_транзакция(ВСД_транзакция);
	
КонецФункции

Функция ОткрытьВСДвГИС(ДокОснование) Экспорт
	ВСД_транзакция = НайтиВСД_транзакция(ДокОснование);
	СписокВСД = НайтиВСД(ВСД_транзакция);
	Для Каждого стр Из СписокВСД Цикл
		UUID = стр.UUID;
		ЗапуститьПриложение("https://t2-mercury.vetrf.ru/pub/operatorui?_action=findVetDocumentFormByUuid&uuid="+UUID);	
	КонецЦикла;
	
КонецФункции

Функция ПечатьПолнойФормыВСД(ДокОснование) Экспорт
	ВСД_транзакция = НайтиВСД_транзакция(ДокОснование);
	СписокВСД = НайтиВСД(ВСД_транзакция);
	Для Каждого стр Из СписокВСД Цикл
		UUID = стр.UUID;
		ЗапуститьПриложение("https://t2-mercury.vetrf.ru/pub/operatorui?_action=printVetDocumentByUuid&uuid="+UUID);	
	КонецЦикла;
	
КонецФункции

Функция ПолучитьГуидХозСубъекта(ХС) Экспорт
	Организация   = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	Если Организация.Пустая() Тогда
		Сообщить("Не определена Основная Организация пользователя", СтатусСообщения.ОченьВажное);
	КонецЕсли;
	
	Обработка = ИнициализацияОбработки( Организация );
  
	Обработка.ХС_ПолучитьGuid(ХС);

КонецФункции

Функция ЗагрузитьПлощадки(ХС) Экспорт
	Организация   = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	Если Организация.Пустая() Тогда
		Сообщить("Не определена Основная Организация пользователя", СтатусСообщения.ОченьВажное);
	КонецЕсли;
	
	Обработка = ИнициализацияОбработки(Организация );
	Обработка.ЗагрузитьПлощадки(ХС);

КонецФункции

//===================================================================================
Функция ИнициализацияОбработки( Организация="") Экспорт
	
	Если Организация = "" Тогда
		Организация   = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		Если Организация.Пустая() Тогда
			Сообщить("Не определена Основная Организация пользователя", СтатусСообщения.ОченьВажное);
		КонецЕсли;		
	КонецЕсли;
	
	СписокПараметров = ЗагрузитьПараметры( Организация );
	
	АдресФайла= СписокПараметров.Получить("ПолноеИмяФайлаОбработки"); 
	Если НЕ ЗначениеЗаполнено(АдресФайла) Тогда
		Сообщить("Параметры не заполнены!");
		Возврат "";
	Иначе
		ВнешняяОбработка = ВнешниеОбработки.Создать(АдресФайла); 
		Обработка=ВнешняяОбработка.ПолучитьФорму(); 
		Обработка.Инициализация();
		Возврат Обработка;
	КонецЕсли;	

КонецФункции


Функция ЗагрузитьПараметры( КлючНастроек ) Экспорт

	//ИмяФайла = ИмяФайлаНастроек();
	//СписокПараметров=Новый("Соответствие");
	//
	//ФайлНастроек = Новый Файл(ИмяФайла);
	//Если НЕ(ФайлНастроек.Существует()) Тогда
	//	Сообщить("Файл с константами ["+ИмяФайла+"] не найден");
	//Иначе
	//	Сообщить("Параметры загружены из файла ["+ИмяФайла+"] ");
	//	СписокПараметров = ЗначениеИзФайла(ИмяФайла);
	//КонецЕсли;
	
	КлючОбъекта  = "ВСД";
	//КлючНастроек = "НастройкиВСД";
	ВладелецНастроек = ИмяПользователя();
	// Для восстановления настроек необходимо воспользоваться функцией Загрузить
	СтруктураНастроек = Неопределено;
	Попытка
		СписокПараметров = ХранилищеОбщихНастроек.Загрузить(КлючОбъекта, Строка(КлючНастроек),,ВладелецНастроек);
		// если настроек нет, то будет возвращено значение "Неопределено"
	Исключение
		Сообщить("Нет прав на восстановление настроек.");
	КонецПопытки;

	Если СписокПараметров = Неопределено Тогда
		Сообщить("Не удалось загрузить настройки "+КлючНастроек+" - "+КлючОбъекта+" - "+ВладелецНастроек);
		СписокПараметров = Новый("Соответствие");
	КонецЕсли;	
		
	Возврат СписокПараметров;
	
КонецФункции

