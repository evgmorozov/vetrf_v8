&НаКлиенте
Перем АвтоЗаписьВСДСоответствия;

// ******* Команды Перемещение/Перезаполнение/Регионализация

&НаКлиенте
Функция МожноПерезаполнять()
	Рез = Истина;
	Если СокрЛП(Объект.Статус = "COMPLETED") Тогда
		Предупреждение("ВСД уже оформлен. Отмена");
		Возврат ложь;
	КонецЕсли;
	
	Если НЕ(ЗначениеЗаполнено(Объект.ДокументОснование)) Тогда
		Предупреждение("Не указан Документ-Основание. Отмена");
		Возврат ложь;
	КонецЕсли;	
	Возврат Рез;	
КонецФункции

&НаСервере
Процедура кнПереместитьНаСервере()
	Обработка = ВСД.ИнициализацияОбработки(Объект.Организация); 
	Если типЗнч(Обработка) = Тип("Строка") тогда
		Сообщить("Не удалось инициализировать обработку Интеграция");
		Возврат;
	КонецЕсли;
	Попытка
		ДокОсн = ?(ЗначениеЗаполнено(Объект.ДокументОснование),Объект.ДокументОснование,Объект.Ссылка);
		Если Обработка.СменаВладельцаВызовИзФормы(ДокОсн) = "ОК" тогда
			Объект.Товары.Очистить();
			Объект.УровниУпаковки.Очистить();
			Объект.Маркировка.Очистить();
			Обработка.ЗаполнитьТЧВСД(Объект.ДокументОснование, Объект);	
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура кнПереместить(Команда)
	Если НЕ МожноПерезаполнять() Тогда
		Возврат;
	КонецЕсли;
	
	ТВопроса = "Перместить недостающе партии от Поставщика?";
	Ответ = Вопрос(ТВопроса,РежимДиалогаВопрос.ДаНет,0);
	Если НЕ (Ответ = КодВозвратаДиалога.Да) Тогда
		Возврат;
	КонецЕсли;
	//Записать();
	ПоказатьОповещениеПользователя("Выполняем Перемещение",,"Ожидайте...",БиблиотекаКартинок.Информация32);
	кнПереместитьНаСервере();
	ПоказатьОповещениеПользователя("Выполнено");
КонецПроцедуры

&НаСервере
Процедура кнЗаполнитьНаСервере()
	Обработка = ВСД.ИнициализацияОбработки(Объект.Организация); 
	Если типЗнч(Обработка) = Тип("Строка") тогда
		Сообщить("Не удалось инициализировать обработку Интеграция");
		Возврат;
	КонецЕсли;
	Объект.Товары.Очистить();
	Объект.УровниУпаковки.Очистить();
	Объект.Маркировка.Очистить();
	Попытка
		Обработка.ЗаполнитьТЧВСД(Объект.ДокументОснование, Объект);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура кнЗаполнить(Команда)
	Если НЕ МожноПерезаполнять() Тогда
		Возврат;
	КонецЕсли;
	ТВопроса = "Табличные части документа будут перезаполнены ?";
	Ответ = Вопрос(ТВопроса,РежимДиалогаВопрос.ДаНет,0);
	Если НЕ (Ответ = КодВозвратаДиалога.Да) Тогда
		Возврат;
	КонецЕсли;
	
	кнЗаполнитьНаСервере();
КонецПроцедуры
//*********Регионализация
&НаСервере
Процедура кнРегионализацияНаСервере()
	Объект.УсловияПеревозки.Очистить();
	Записать();
	Обработка = ВСД.ИнициализацияОбработки();
	Обработка.ПроверитьВозможностьПеремещения(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура кнРегионализация(Команда)
	ТВопроса = "Запросить условия перевозки в Меркурий ?";
	Ответ = Вопрос(ТВопроса,РежимДиалогаВопрос.ДаНет,0);
	Если НЕ (Ответ = КодВозвратаДиалога.Да) Тогда
		Возврат;
	КонецЕсли;
	ПоказатьОповещениеПользователя("Выполняем запрос Регионализации",,"Ожидайте...",БиблиотекаКартинок.Информация32);
	кнРегионализацияНаСервере();
	ПоказатьОповещениеПользователя("Выполнено");
	ЭтаФорма.Закрыть();
КонецПроцедуры


//************** Форма события

//После заполнения сюда сразу попадаем
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда //ЭтоНовый   https://helpf.pro/faq83/view/1829.html
		
	КонецЕсли;
	Если Объект.Номер = "" Тогда  // тоже новый
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Статус = "";
		Объект.applicationID = "";
		Если Объект.УсловияПеревозки.Количество()>0 Тогда
			Ответ = Вопрос("Очистить условия перевозки, полученные из копируемого документа?",РежимДиалогаВопрос.ДаНет,0);
			Если Ответ = КодВозвратаДиалога.Да Тогда
    			Объект.УсловияПеревозки.Очистить();
			КонецЕсли;			
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.Организация) тогда
       		Объект.Организация   =  ВСД.ПолучитьОрганизациюПоУмолчанию();
			ОрганизацияПриИзменении("");
		Иначе
			СписокПараметров = ВСД.ЗагрузитьПараметры( Объект.Организация );
			АвтоЗаписьВСДСоответствия = СписокПараметров.Получить("АвтоЗаписьВСДСоответствия");
		КонецЕсли;
	Иначе
		СписокПараметров = ВСД.ЗагрузитьПараметры( Объект.Организация );
		АвтоЗаписьВСДСоответствия = СписокПараметров.Получить("АвтоЗаписьВСДСоответствия");
	КонецЕсли;

КонецПроцедуры

// События Формы
# Область События_Шапка_документа

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	СписокПараметров = ВСД.ЗагрузитьПараметры( Объект.Организация );
	Объект.Отправитель_ХозСубъект = СписокПараметров.Получить("Отправитель_ХозСубъект");
	Объект.Отправитель_Площадка = СписокПараметров.Получить("Отправитель_Площадка");
	Объект.Перевозчик_ХозСубъект = СписокПараметров.Получить("Перевозчик_ХозСубъект");
	Объект.РезультатыИсследований = СписокПараметров.Получить("ВСД_РезультатыИсследований");
	Объект.Местность = СписокПараметров.Получить("ВСД_Местность");
	Объект.ОсобыеОтметки = СписокПараметров.Получить("ВСД_ОсобыеОтметки");
	Объект.ТермическоеСостояние = СписокПараметров.Получить("ТермУсловияПеревозки");
    Объект.cargoInspected = true;
	АвтоЗаписьВСДСоответствия = СписокПараметров.Получить("АвтоЗаписьВСДСоответствия");	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПлощадкиПоХС(Элемент, ГУИДХСдляОтбора)
	ГУИДХСдляОтбора = ?(ЗначениеЗаполнено(ГУИДХСдляОтбора),ГУИДХСдляОтбора,"****");
	ЗначениеОтбора = Новый Структура("GuidХозСубъекта", ГУИДХСдляОтбора);
	ПараметрыПодбора = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора,Отбор", Истина, Истина,ЗначениеОтбора);	
	ОткрытьФорму("Справочник.ВСД_Площадка.ФормаВыбора", ПараметрыПодбора, Элемент);	
КонецПроцедуры

&НаКлиенте
Процедура Отправитель_ПлощадкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	// Отбор по ХС включим
	ГУИДХСдляОтбора = ВСД.ПолучитьЗначениеРевизитаОбъекта_НаСервере(Объект.Отправитель_ХозСубъект,"GUID");
	ВыбратьПлощадкиПоХС(Элемент,ГУИДХСдляОтбора);
КонецПроцедуры

&НаКлиенте
Процедура Получатель_ПлощадкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	// Отбор по ХС включим
	ГУИДХСдляОтбора = ВСД.ПолучитьЗначениеРевизитаОбъекта_НаСервере(Объект.Получатель_ХозСубъект,"GUID");
	ВыбратьПлощадкиПоХС(Элемент,ГУИДХСдляОтбора);
КонецПроцедуры

&НаКлиенте
Процедура Получатель_ХозСубъектПриИзменении(Элемент)
	Объект.Получатель_Площадка = "";
КонецПроцедуры

&НаКлиенте
Процедура Отправитель_ХозСубъектПриИзменении(Элемент)
	Объект.Отправитель_Площадка = "";
КонецПроцедуры

#КонецОбласти

	//ЖД  - ту косяк - все строки Товаров ниже удаленной сдвигаются - вот незадача !!!!
	// а у нас связь по № строки тч. Товары  - нужно что то уникальное
	// сдвиг строк в ТЧ Товары стандартный - аналогичный косяк !!!


#Область События_ТЧ_Товары

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	// поищем ВСД Элемент и Партию
	СтрокаТабличнойЧасти = Элемент.Родитель.ТекущиеДанные;
	СтрокаТабличнойЧасти.Продукция_Элемент = ВСД.Получить_ВСД_Продукция_Элемент( СтрокаТабличнойЧасти.Номенклатура );
	СтрокаТабличнойЧасти.Партия = ВСД.ВыбратьПартию(СтрокаТабличнойЧасти.Продукция_Элемент, Объект.Отправитель_Площадка, Объект.Отправитель_ХозСубъект);
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = ВСД.ПолучитьЗначениеРевизитаОбъекта_НаСервере(СтрокаТабличнойЧасти.Продукция_Элемент,"ЕдиницаИзмерения");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПродукция_ЭлементПриИзменении(Элемент)
	// Сопоставить Номенклатуру с ПродукцияЭлемент
	СтрокаТабличнойЧасти = Элемент.Родитель.ТекущиеДанные;
	СтрокаТабличнойЧасти.Партия = ВСД.ВыбратьПартию(СтрокаТабличнойЧасти.Продукция_Элемент, Объект.Отправитель_Площадка, Объект.Отправитель_ХозСубъект);
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = ВСД.ПолучитьЗначениеРевизитаОбъекта_НаСервере(СтрокаТабличнойЧасти.Продукция_Элемент,"ЕдиницаИзмерения");
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) и ЗначениеЗаполнено(СтрокаТабличнойЧасти.Продукция_Элемент) и АвтоЗаписьВСДСоответствия Тогда
		ВСД.Установить_Соответствие_ВСД_Продукция_Элемент(СтрокаТабличнойЧасти.Номенклатура,СтрокаТабличнойЧасти.Продукция_Элемент);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПартияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокПартийДляВыбора = ВСД.СписокАктуальныхПартийПоФильтру_Запрос(Элемент.Родитель.ТекущиеДанные.Продукция_Элемент,Объект.Отправитель_Площадка, Объект.Отправитель_ХозСубъект);	
	ПараметрыПодбора = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора,Отбор", Истина, Истина,Новый Структура("Ссылка", СписокПартийДляВыбора));	
	ОткрытьФорму("Справочник.ВСД_Партия.ФормаВыбора", ПараметрыПодбора, Элемент);	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПартияПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элемент.Родитель.ТекущиеДанные;
	СтрокаТабличнойЧасти.Продукция_Элемент =  ВСД.ПолучитьЗначениеРевизитаОбъекта_НаСервере(СтрокаТабличнойЧасти.Партия,"Продукция_Элемент");
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = ВСД.ПолучитьЗначениеРевизитаОбъекта_НаСервере(СтрокаТабличнойЧасти.Партия,"ЕдиницаИзмерения");
 	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) и ЗначениеЗаполнено(СтрокаТабличнойЧасти.Продукция_Элемент) и АвтоЗаписьВСДСоответствия Тогда
		ВСД.Установить_Соответствие_ВСД_Продукция_Элемент(СтрокаТабличнойЧасти.Номенклатура,СтрокаТабличнойЧасти.Продукция_Элемент);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	// Фильтруем Уровни Упаковки
	к=0;	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		ЭтаФорма.Элементы.УровниУпаковки.ОтборСтрок = Новый ФиксированнаяСтруктура("СтрокаПродукции", 0);//.СтрокаПродукции.Установить(0);
	Иначе
		ЭтаФорма.Элементы.УровниУпаковки.ОтборСтрок = Новый ФиксированнаяСтруктура("СтрокаПродукции", Элемент.ТекущиеДанные.НомерСтроки);//.СтрокаПродукции.Установить(Элемент.ТекущиеДанные.НомерСтроки);
		ЭтаФорма.Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("СтрокаПродукции",Элемент.ТекущиеДанные.НомерСтроки);
	КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	к = 0;
	// Удалить связанные уровни упаковки и маркировки
	//ЖД  - ту косяк - все строки ниже удаленной сдвигаются - вот незадача !!!!
	// а у нас связь по № строки тч. Товары  - нужно что то уникальное
	// сдвиг строк в ТЧ Товары стандартный - аналогичный косяк !!!
	
	СтруктураДляПоиска = Новый Структура("СтрокаПродукции", Элемент.ТекущиеДанные.НомерСтроки); 
	//ТабличнаяЧастьДок = ОбъектДок.Товары; 
	//Получаем список строк соответсвтвующих отбору, и перебором удаляем.
	МассивПустыхСтрок = Объект.Маркировка.НайтиСтроки(СтруктураДляПоиска); 
	Для каждого Строка Из МассивПустыхСтрок Цикл 
		Объект.Маркировка.Удалить(Строка); 
	КонецЦикла; 
	МассивПустыхСтрок = Объект.УровниУпаковки.НайтиСтроки(СтруктураДляПоиска); 
	Для каждого Строка Из МассивПустыхСтрок Цикл 
		Объект.УровниУпаковки.Удалить(Строка); 
	КонецЦикла; 
КонецПроцедуры
#КонецОбласти

//***** Работа с уровнями упаковки : на событиях и фильтрация.
#Область ТЧ_УровниУпаковки_Маркировка

&НаКлиенте
Процедура УровниУпаковкиПриАктивизацииСтроки(Элемент)
	Если (ЭтаФорма.Элементы.Товары.ТекущаяСтрока = Неопределено) или
		(ЭтаФорма.Элементы.УровниУпаковки.ТекущаяСтрока = Неопределено) Тогда
		ЭтаФорма.Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("СтрокаПродукции", 0);
	ИначеЕсли (Элемент.ТекущиеДанные <> Неопределено) тогда  //Непонятный момент Чему равна ТекущаяСтрока
		ЭтаФорма.Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("СтрокаПродукции",Элемент.ТекущиеДанные.СтрокаПродукции);
		ЭтаФорма.Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("НомерУровня",Элемент.ТекущиеДанные.НомерУровня);
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура УровниУпаковкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если ЭтаФорма.Элементы.Товары.ТекущаяСтрока = Неопределено Тогда
		Отказ = true;
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура УровниУпаковкиПередУдалением(Элемент, Отказ)
	// Удалить маркировки по уровню
	СтруктураДляПоиска = Новый Структура("НомерУровня", Элемент.ТекущиеДанные.НомерУровня); 
	//Получаем список строк соответсвтвующих отбору, и перебором удаляем.
	МассивПустыхСтрок = Объект.Маркировка.НайтиСтроки(СтруктураДляПоиска); 
	Для каждого Строка Из МассивПустыхСтрок Цикл 
		Объект.Маркировка.Удалить(Строка); 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УровниУпаковкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Элемент.ТекущиеДанные.СтрокаПродукции = ЭтаФорма.Элементы.Товары.ТекущиеДанные.НомерСтроки;
КонецПроцедуры

&НаКлиенте
Процедура УровниУпаковкиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НЕ(ЗначениеЗаполнено(Элемент.ТекущиеДанные.НомерУровня))	или НЕ(ЗначениеЗаполнено(Элемент.ТекущиеДанные.ФормаУпаковки)) Тогда
		Предупреждение("Заполните все данные !!!");
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МаркировкаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если ЭтаФорма.Элементы.УровниУпаковки.ТекущаяСтрока = Неопределено Тогда 
		Отказ = true;
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура МаркировкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если ЭтаФорма.Элементы.УровниУпаковки.ТекущиеДанные <> Неопределено Тогда 
		Элемент.ТекущиеДанные.СтрокаПродукции = ЭтаФорма.Элементы.УровниУпаковки.ТекущиеДанные.СтрокаПродукции;
		Элемент.ТекущиеДанные.НомерУровня = ЭтаФорма.Элементы.УровниУпаковки.ТекущиеДанные.НомерУровня;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МаркировкаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НЕ(ЗначениеЗаполнено(Элемент.ТекущиеДанные.Класс))	или НЕ(ЗначениеЗаполнено(Элемент.ТекущиеДанные.Маркировка)) Тогда
		Предупреждение("Заполните все данные !!!");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
