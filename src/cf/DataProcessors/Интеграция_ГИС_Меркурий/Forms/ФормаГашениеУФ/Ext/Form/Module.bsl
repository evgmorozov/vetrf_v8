// Форма Гашение для УП


//**** Открытие доп формы и возврат из нее значений, прочитано на http://is.1csoft.com/public/414550/
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КопироватьДанныеФормы(ВладелецФормы.Объект, Объект);
	Объект.ФлНеЗагружать = Истина; // не создаем ВСД в 1С
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СтандартнаяОбработка         = Ложь;
	Закрыть(Объект);
КонецПроцедуры
//*******************  Открытие/Закрыте формы окончание

Функция ПолучитьЗначениеРевизитаОбъекта_НаСервере(ВыбОбъект,Реквизит) экспорт
	// это раньше делалось просто через точку прямо в модуле формы
	Попытка
		Возврат ВыбОбъект[Реквизит];
	Исключение
		Сообщить("Указан неверный реквизит "+Реквизит+" для объекта "+ВыбОбъект);
		Сообщить(ОписаниеОшибки());
		Возврат "";
	КонецПопытки
КонецФункции
// Шапка
&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	Фобъект = РеквизитФормыВЗначение("Объект");
	ФОбъект.Инициализация();
	ЗначениеВРеквизитФормы(Фобъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Объект.ВСДВходящие.Очистить();
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Отправитель_ПлощадкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Отбор по ХС включим
	Если Элемент.имя = "ВыбрПлощадка" тогда
		ГУИДХСдляОтбора = ПолучитьЗначениеРевизитаОбъекта_НаСервере(ВыбрХозСубъект,"GUID");
	Иначе
		ГУИДХСдляОтбора = ПолучитьЗначениеРевизитаОбъекта_НаСервере(Объект.Отправитель_ХозСубъект,"GUID");
	КонецЕсли;
	ГУИДХСдляОтбора = ?(ЗначениеЗаполнено(ГУИДХСдляОтбора),ГУИДХСдляОтбора,"****");
	
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("GuidХозСубъекта", ГУИДХСдляОтбора);
	ПараметрыПодбора = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора,Отбор", Истина, Истина,ЗначениеОтбора);	
	ОткрытьФорму("Справочник.ВСД_Площадка.ФормаВыбора", ПараметрыПодбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Отправитель_ПлощадкаПриИзменении(Элемент)
	Объект.ВСДВходящие.Очистить();
КонецПроцедуры

// Вкладка Гашение

&НаКлиенте
Процедура ВСДВходящиеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура кнОтметитьВсеДокументы(Команда)
	Для Каждого стр Из объект.ВСДВходящие Цикл
		стр.Отметка = ложь;
		Если стр.Статус = "COMPLETED" Тогда
			Продолжить;	
		КонецЕсли;
		Если НЕ(стр.Отметка) Тогда 
			стр.Отметка = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкиДокументов(Команда)
	Для Каждого стр Из Объект.ВСДВходящие Цикл
		Если (стр.Отметка) Тогда 
			стр.Отметка = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура кнПолучитьВСДНаСервере()
	Фобъект = РеквизитФормыВЗначение("Объект");
	Запросов = 20;
	Пока (ФОбъект.ПолучитьСписокВСД( Объект.Отправитель_Площадка, "INCOMING","CONFIRMED", 0,ВыбначалоПериода,ВыбОкончаниеПериода,ВыбрХозСубъект, ВыбрПлощадка)="REJECTED") и (Запросов > 0) Цикл
		Запросов = Запросов - 1;
		Сообщить("Попыток запроса ВСД осталось "+Запросов);
	КонецЦикла;
	ЗначениеВРеквизитФормы(Фобъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура кнПолучитьВСД(Команда)
	ПоказатьОповещениеПользователя("Выполняем запрос Входящих ВСД по "+Объект.Отправитель_Площадка,,"Ожидайте...",БиблиотекаКартинок.Информация32);
	кнПолучитьВСДНаСервере();
	ПоказатьОповещениеПользователя("Выполнено");
КонецПроцедуры

&НаСервере
Процедура кнПогаситьНаСервере()
	Объект.ФлАктНесоответствия = флАктНесоответствия;
	объект.тПричинаАкта = тПричинаАкта;
	объект.тОписаниеНесоответствия = тОписаниеНесоответствия;
	Фобъект = РеквизитФормыВЗначение("Объект");
	ФОбъект.ОтправкаЗапросовНаГашение();
	ЗначениеВРеквизитФормы(Фобъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура кнПогасить(Команда)
	ПоказатьОповещениеПользователя("Выполняем запрос Гашения Входящих ВСД",,"Ожидайте...",БиблиотекаКартинок.Информация32);
	кнПогаситьНаСервере();
	ПоказатьОповещениеПользователя("Выполнено");	
КонецПроцедуры


// ТЕСТ Раработчик
&НаСервере
Процедура кнЗагрузитьИзФайлаНаСервере()
	Фобъект = РеквизитФормыВЗначение("Объект");
	ФОбъект.ЗагрузитьXML_ВСД2(Объект.СтрИмяФайла,Объект.ВСДВходящие);
	Для каждого стрВход из ФОбъект.ВСДВходящие Цикл
		стрВход.ДокВСД = ФОбъект.НайтиВСД_ВходящийпоUUID(стрВход.uuid);
		Если значениеЗаполнено(стрВход.ДокВСД) Тогда
			стрВход.КоличествоПринять = стрВход.ДокВСД.КоличествоПринять;
			стрВход.КоличествоВозврат = стрВход.ДокВСД.КоличествоВозврат;
			
			//стрВход.ДокВозврат = ВСД.НайтиВСД_ИсходящийНаВозврат(стрВход.ДокВСД);	
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Фобъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура кнЗагрузитьИзФайла(Команда)
	Объект.ВСДВходящие.Очистить();
	кнЗагрузитьИзФайлаНаСервере();
КонецПроцедуры

&НаСервере
Процедура кнЗагрузитьПартииИзФайлаНаСервере()
	Фобъект = РеквизитФормыВЗначение("Объект");
	ФОбъект.ЗагрузитьXML_Партии2(Объект.СтрИмяФайла);
	ЗначениеВРеквизитФормы(Фобъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура кнЗагрузитьПартииИзФайла(Команда)
	кнЗагрузитьПартииИзФайлаНаСервере();
КонецПроцедуры

// ***** Соответствия
&НаСервере
Функция ПолучитьНоменклатуруПоПродукцияЭлемент(ПродукцияЭлемент, Только1элемент = 0)
	// Возврашает массив со ссылками на Номенклатуру или первый элемент Номенклатура
	// Вынести в ГМ
	Запрос = Новый Запрос;
	Запрос.Текст = "Выбрать ВСД_Соответсвия.Номенклатура из РегистрСведений.ВСД_Соответсвия как ВСД_Соответсвия где ВСД_Соответсвия.ПродукцияЭлемент = &Ресурс1";
	Запрос.УстановитьПараметр("Ресурс1", ПродукцияЭлемент);	
	Если Не Только1Элемент Тогда
		ТзВрем = Запрос.Выполнить().Выгрузить();
		ТзВрем.ВыгрузитьКолонку("Номенклатура");
		Возврат ТзВрем.ВыгрузитьКолонку("Номенклатура");		
	Иначе
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Номенклатура;
		Иначе
			Возврат "";
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервере
Функция НайтиНоменклатуруПоРеквизиту(ВыбРеквизит,ЗначениеРеквизита)
	Рез = "";
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|Выбрать Номенклатура.Ссылка из Справочник.Номенклатура как Номенклатура 
	|где Номенклатура.@ИмяРекв = &ЗначРеквизита";
	текстЗапроса = СтрЗаменить(ТекстЗапроса,"@ИмяРекв",ВыбРеквизит);
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ЗначРеквизита", ЗначениеРеквизита);
	Попытка
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Рез = Выборка.Ссылка;	
		КонецЕсли;
	Исключение
		Сообщить("Что-то пошло не так",СтатусСообщения.Внимание);
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	Возврат Рез;
	
КонецФункции

&НаСервере
Процедура ОчиститьСоответствие(ВыбНоменклатура,ВСДЭлемент)
	// Вынести в ГМ
	Набор = РегистрыСведений.ВСД_Соответсвия.СоздатьНаборЗаписей();
	Набор.Отбор.Номенклатура.Установить(ВыбНоменклатура);
	Набор.Отбор.Номенклатура.Использование = Истина;
	Набор.Прочитать();
	Набор.Очистить();
	Набор.Записать(true);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЗСоответствий(сзПродукцияЭлементы)
	//Вынести в модуль объекта
	// Заполнение Продукция_элементом  + сразу поиск установленных соответствий
	// сзПродукцияЭлементы - Список Значений
	Объект.Соответствия.Очистить();
	тз = Объект.Соответствия.Выгрузить(); //Взяли структуру
	для каждого стрТз из сзПродукцияЭлементы Цикл
		стрСоотв = тз.Добавить();
		стрСоотв.Продукция_Элемент = стрТз.Значение;//Продукция_Элемент;
		стрСоотв.Производитель = стрСоотв.Продукция_Элемент.Площадка;
		стрСоотв.Артикул = стрСоотв.Продукция_Элемент.Артикул;
		стрСоотв.GTIN = стрСоотв.Продукция_Элемент.GTIN;
		стрСоотв.Номенклатура = ПолучитьНоменклатуруПоПродукцияЭлемент(стрСоотв.Продукция_Элемент, 1);
		Если ЗначениеЗаполнено(стрСоотв.Номенклатура) Тогда
			стрСоотв.Записано = true;	
		КонецЕсли;
	КонецЦикла;
	//Свернем, т.к. могут повторяться
	тз.Свернуть("Продукция_Элемент,Номенклатура,Артикул,GTIN,Производитель,Записано","");
	Объект.Соответствия.Загрузить(тз);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСПоискомПоРеквизиту(ВыбРеквизит,ИмяРекв = "Артикул")
	тз = Объект.Соответствия.Выгрузить();
	для каждого строкаТз из тз Цикл
		Если (строкаТз.Записано) или (ЗначениеЗаполнено(строкаТз.Номенклатура)) Тогда
			Продолжить;
		КонецЕсли;
		Если ИмяРекв = "Артикул" Тогда
		    ВыбЗначение = СокрЛП(строкаТз.Артикул);
		Иначе
		    ВыбЗначение = СокрЛП(строкаТз.GTIN);
		КонецЕсли;
		Если НЕ(ЗначениеЗаполнено(ВыбЗначение)) тогда
			Продолжить;	
		КонецЕсли;		
		строкаТз.Номенклатура = НайтиНоменклатуруПоРеквизиту(ВыбРеквизит,ВыбЗначение);
	КонецЦикла;
	Объект.Соответствия.Загрузить(Тз);
КонецПроцедуры

//**** кнопки

&НаСервере
Процедура кнЗаполнитьТзСоответствийСервер()
	Фобъект = РеквизитФормыВЗначение("Объект");
	сзЭлементы = Новый СписокЗначений;
	сзЭлементы.ЗагрузитьЗначения(Фобъект.ВсдВходящие.ВыгрузитьКолонку("Продукция_Элемент"));
	ЗаполнитьТЗСоответствий(сзЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура кнЗаполнитьТзСоответствий(Команда)
	кнЗаполнитьТзСоответствийСервер();
КонецПроцедуры

&НаСервере
Процедура кнЗаполнитьИзСправочникаНаСервере()
	// Заполним из Справочника ВСД_Продукция_Элемент
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВСД_Продукция_Элемент.Ссылка
	               |ИЗ
	               |	Справочник.ВСД_Продукция_Элемент КАК ВСД_Продукция_Элемент
	               |ГДЕ
	               |	ВСД_Продукция_Элемент.ПометкаУдаления = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВСД_Продукция_Элемент.Наименование";
	Запрос.Текст = ТекстЗапроса;
	ТзВрем = Запрос.Выполнить().Выгрузить();
	сзЭлементы = Новый СписокЗначений;
	сзЭлементы.ЗагрузитьЗначения(ТзВрем.ВыгрузитьКолонку("Ссылка"));
	ЗаполнитьТЗСоответствий(сзЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура кнЗаполнитьИзСправочника(Команда)
	кнЗаполнитьИзСправочникаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура кнНайтиПоАртикулу(Команда)
	ЗаполнитьСПоискомПоРеквизиту(ИмяРеквизитаАртикул,"Артикул");
КонецПроцедуры

&НаКлиенте
Процедура кнНайтиПоШК(Команда)
	ЗаполнитьСПоискомПоРеквизиту(ИмяРеквизитаШК,"ШК");
КонецПроцедуры

&НаСервере
Процедура кнЗаписатьСоответствияНаСервере()
	тз = Объект.Соответствия.Выгрузить();
	для каждого строкаТз из тз Цикл
		Если (строкаТз.Записано) или НЕ(ЗначениеЗаполнено(строкаТз.Номенклатура)) Тогда
			Продолжить;
		КонецЕсли;
		ВСД.Установить_Соответствие_ВСД_Продукция_Элемент(СтрокаТЗ.Номенклатура,СтрокаТЗ.Продукция_Элемент);
		строкаТЗ.Записано = True;
	КонецЦикла;
	Объект.Соответствия.Загрузить(Тз);
КонецПроцедуры

&НаКлиенте
Процедура кнЗаписатьСоответствия(Команда)
	кнЗаписатьСоответствияНаСервере();
КонецПроцедуры

&НаСервере
Процедура кнУбратьЗаполненныеНаСервере()
	тз = Объект.Соответствия.Выгрузить();
	Найдено = тз.Найти(True,"Записано"); 
	Пока НЕ(Найдено = Неопределено) Цикл
		тз.Удалить(Найдено);
		Найдено = тз.Найти(True,"Записано");
	КонецЦикла;
	Объект.Соответствия.Загрузить(Тз);
КонецПроцедуры

&НаКлиенте
Процедура кнУбратьЗаполненные(Команда)
	кнУбратьЗаполненныеНаСервере();
КонецПроцедуры
// События Соответствия

&НаКлиенте
Процедура СоответствияНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элемент.Родитель.ТекущиеДанные.Записано Тогда
		ТекстВопроса = "Установлена связь с 
		|"+Элемент.Родитель.ТекущиеДанные.Продукция_Элемент+"
		|Отвязываем ?";
		Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ОчиститьСоответствие(Элемент.Родитель.ТекущиеДанные.Номенклатура,Элемент.Родитель.ТекущиеДанные.Продукция_Элемент);		
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция Получить_ВСД_Продукция_ЭлементНаСервере(ВыбНоменклатура)
	Возврат  ВСД.Получить_ВСД_Продукция_Элемент(ВыбНоменклатура);	
КонецФункции

&НаКлиенте
Процедура СоответствияНоменклатураПриИзменении(Элемент)
	ВремПЭлемент = Получить_ВСД_Продукция_ЭлементНаСервере(Элемент.Родитель.ТекущиеДанные.Номенклатура);
	Если НЕ ЗначениеЗаполнено(ВремПЭлемент) Тогда
		Элемент.Родитель.ТекущиеДанные.Записано = False;
	ИначеЕсли НЕ(ВремПЭлемент = Элемент.Родитель.ТекущиеДанные.Продукция_Элемент) Тогда
		ТекстВопроса = "Уже установлена связь с 
		|"+ВремПЭлемент+"
		|Отвязываем ?";
		Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
    		Элемент.Родитель.ТекущиеДанные.Номенклатура = "";
		Иначе
			ОчиститьСоответствие(Элемент.Родитель.ТекущиеДанные.Номенклатура,ВремПЭлемент);		
		КонецЕсли;
		Элемент.Родитель.ТекущиеДанные.Записано = False;
	Иначе
		Элемент.Родитель.ТекущиеДанные.Записано = True;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СоответствияНоменклатураОчистка(Элемент, СтандартнаяОбработка)
	Если Элемент.Родитель.ТекущиеДанные.Записано Тогда
		СтандартнаяОбработка = ложь;
		ТекстВопроса = "Установлена связь с 
		|"+Элемент.Родитель.ТекущиеДанные.Продукция_Элемент+"
		|Отвязываем ?";
		Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ОчиститьСоответствие(Элемент.Родитель.ТекущиеДанные.Номенклатура,Элемент.Родитель.ТекущиеДанные.Продукция_Элемент);
			СтандартнаяОбработка = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоответствияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры


//*****


&НаКлиенте
Процедура ВыборПериодаВСД(Период, ДополнительныеПараметры) Экспорт
	Диалог = ДополнительныеПараметры.Диалог;
	Если ЗначениеЗаполнено(Период) Тогда 
		ВыбранныйПериод = Диалог.Период;
		ВыбНачалоПериода = ВыбранныйПериод.ДатаНачала;
		ВыбокончаниеПериода = ВыбранныйПериод.ДатаОкончания;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура кнВыбратьПериодВСД(Команда)
	ВыбранныйПериод = Новый СтандартныйПериод;
	Если Команда.Имя = "кнВыбратьПериодВСД" Тогда
		// Устанавливаем начальные данные
		ВыбранныйПериод.ДатаНачала = ВыбНачалоПериода;
		ВыбранныйПериод.ДатаОкончания = ВыбокончаниеПериода;
		КудаРезультат = "ВыборПериодаВСД";
	КонецЕсли;
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = ВыбранныйПериод;
	// Не модальный вызов диалога выбора периода
		
	Диалог.Показать(Новый ОписаниеОповещения(КудаРезультат, ЭтаФорма, Новый Структура("Диалог", Диалог)));
		
КонецПроцедуры


&НаСервере
Процедура кнОформитьВходящийВСДНаСервере()
	Фобъект = РеквизитФормыВЗначение("Объект");
	ФОбъект.СоздатьВСД_ВходящиеПоТЗВходящих();
	ЗначениеВРеквизитФормы(Фобъект,"Объект");

КонецПроцедуры


&НаКлиенте
Процедура кнОформитьВходящийВСД(Команда)
	Ответ = Вопрос("Создать документы в 1С ?",РежимДиалогаВопрос.ДаНет,0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
   		кнОформитьВходящийВСДНаСервере();
	КонецЕсли;
КонецПроцедуры


