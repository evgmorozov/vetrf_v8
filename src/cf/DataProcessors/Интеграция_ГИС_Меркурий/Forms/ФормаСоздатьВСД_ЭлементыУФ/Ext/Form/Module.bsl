// Форма Создание Прод элементов
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	попытка
		КопироватьДанныеФормы(ВладелецФормы.Объект, Объект);
		Исключение КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СтандартнаяОбработка         = Ложь;
	Закрыть(Объект);
КонецПроцедуры
//*******************  Открытие/Закрыте формы окончание

Функция ПолучитьЗначениеРевизитаОбъекта_НаСервере(ВыбОбъект,Реквизит) экспорт
	Попытка
		Возврат ВыбОбъект[Реквизит];
	Исключение
		Сообщить("Указан неверный реквизит "+Реквизит+" для объекта "+ВыбОбъект);
		Сообщить(ОписаниеОшибки());
		Возврат "";
	КонецПопытки
КонецФункции

&НаСервере
Функция ЗаполнитьНоменклатуруВТЗ() Экспорт
	//Проверим, все ли заполнено
	//mitmond
	выбНоменклатура=?(ЗначениеЗаполнено(ВыбГруппаНоменклатуры), ВыбГруппаНоменклатуры, ВыбСписокНоменклатуры);
	//Если (НЕ ЗначениеЗаполнено(ВыбГруппаНоменклатуры)) или
	
	Объект.ВСДЭлементы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|Номенклатура.Ссылка
	|ИЗ
	|Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|Номенклатура.Ссылка В ИЕРАРХИИ(&Папка)";


Запрос.УстановитьПараметр("Папка",ВыбНоменклатура);	

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Ном=выборка.ссылка;//mitmond
		Если Выборка.Ссылка.ЭтоГруппа тогда
			Продолжить;
		КонецЕсли;
		
		СтрЭлемент = Объект.ВСДЭлементы.Добавить();
		СтрЭлемент.Номенклатура = Ном;
		СтрЭлемент.Продукция_Элемент = ВСД.Получить_ВСД_Продукция_Элемент(Выборка.Ссылка); //Проверим на наличие соответствия
		СтрЭлемент.Продукция = ?(ЗначениеЗаполнено(СтрЭлемент.Продукция_Элемент),СтрЭлемент.Продукция_Элемент.Продукция,ВыбПродукция);
		СтрЭлемент.ВидПродукции = ?(ЗначениеЗаполнено(СтрЭлемент.Продукция_Элемент),СтрЭлемент.Продукция_Элемент.ВидПродукции,ВыбВидПродукции);
		
		СтрЭлемент.ЕдиницаИзмерения = ?(ЗначениеЗаполнено(СтрЭлемент.Продукция_Элемент),СтрЭлемент.Продукция_Элемент.ЕдиницаИзмерения,ВыбЕдиницаИзмерения);
		СтрЭлемент.СрокГодности = ?(ЗначениеЗаполнено(СтрЭлемент.Продукция_Элемент),СтрЭлемент.Продукция_Элемент.СрокГодности,ВыбСрокГодности);
	
		СтрЭлемент.ТермическиеУсловияПеревозки = ?(ЗначениеЗаполнено(СтрЭлемент.Продукция_Элемент),СтрЭлемент.Продукция_Элемент.ТермическиеУсловияПеревозки,ВыбТермическиеУсловия);
		Стрэлемент.GUID = СтрЭлемент.Продукция_Элемент.GUID;

	КонецЦикла;	
	Возврат "";
КонецФункции

&НаСервере
Функция СоздатьИзменитьПродукцияЭлемент1С(ВыбСтрЭлемент)
	// Берем данные из ТЧ - Не все м.б. одинаковые, пользователь поправил например
	Если значениеЗаполнено(ВыбСтрЭлемент.Продукция_Элемент) Тогда
		НовПродукцияЭлемент = ВыбСтрЭлемент.Продукция_Элемент.ПолучитьОбъект();	
	Иначе
		НовПродукцияЭлемент = Справочники.ВСД_Продукция_Элемент.СоздатьЭлемент();	
	КонецЕсли;
	
	НовПродукцияЭлемент.Продукция = ВыбСтрЭлемент.Продукция;
	НовПродукцияЭлемент.ВидПродукции = ВыбСтрЭлемент.ВидПродукции;
	НовПродукцияЭлемент.Наименование = ВыбСтрЭлемент.Номенклатура.Наименование;
	НовПродукцияЭлемент.Площадка = Объект.Отправитель_Площадка;
	НовПродукцияЭлемент.ЕдиницаИзмерения = ВыбСтрЭлемент.ЕдиницаИзмерения;
	НовПродукцияЭлемент.ТермическиеУсловияПеревозки = ВыбСтрЭлемент.ТермическиеУсловияПеревозки;
	НовПродукцияЭлемент.СрокГодности = ВыбСтрЭлемент.СрокГодности;	
	НовПродукцияЭлемент.Записать();
	Возврат НовПродукцияЭлемент.Ссылка;
КонецФункции

&НаСервере
Функция СоздатьВСДЭлементы() Экспорт
	// Создает элемент справочника ВСД_Продукция_Элемент при отсутствии
	// Устанавливает Соответствие с Номенклатурой
	// Создает в Меркурии Продукццию
	Если (Не ЗначениеЗаполнено(Объект.Отправитель_Площадка)) или (Не ЗначениеЗаполнено(Объект.Организация)) Тогда
		Сообщить("Укажите Организацию и Площадку");
		Возврат "";
	КонецЕсли;
	ФОбъект = РеквизитФормыВЗначение("Объект");
	Для каждого СтрЭлемент из ФОбъект.ВСДЭлементы Цикл
		Если (НЕ Стрэлемент.Отметка) или (ЗначениеЗаполнено(СтрЭлемент.GUID)) Тогда
			Продолжить; // Уже создан в Меркурий
		КонецЕсли;
		// Юзер наколбасил в ТЧ
		Если НЕ ЗначениеЗаполнено(СтрЭлемент.Продукция) или
			НЕ ЗначениеЗаполнено(СтрЭлемент.ВидПродукции) или
			НЕ ЗначениеЗаполнено(СтрЭлемент.Номенклатура) или 
			НЕ ЗначениеЗаполнено(СтрЭлемент.ЕдиницаИзмерения)	Тогда
				Сообщить("Обязательные реквизиты для "+СтрЭлемент.Номенклатура+" в строке "+СтрЭлемент.номерСтроки+" не заполнены !!!");
				Продолжить;
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрЭлемент.Продукция_Элемент) Тогда
			СтрЭлемент.Продукция_Элемент = СоздатьИзменитьПродукцияЭлемент1С(СтрЭлемент);
			Если НЕ ЗначениеЗаполнено(СтрЭлемент.Продукция_Элемент) Тогда
				Сообщить("Что-то пошло не так. Не создался Продукция Элемент для "+СтрЭлемент.Номенклатура);
				Продолжить;
			КонецЕсли;
			ВСД.Установить_Соответствие_ВСД_Продукция_Элемент(СтрЭлемент.Номенклатура,СтрЭлемент.Продукция_Элемент);
		КонецЕсли;
		
		Если НЕ (СтрЭлемент.Продукция_Элемент.Площадка = Объект.Отправитель_Площадка) Тогда
			Сообщить("Не совпадает Площадка с установленной у "+СтрЭлемент.Продукция_Элемент+" -> ПРОПУСКАЮ");
			Продолжить;
		КонецЕсли;
		
		Попытка 
			ФОбъект.Изменить_Продукцию(СтрЭлемент.Продукция_Элемент,"CREATE");
			СтрЭлемент.GUID = СтрЭлемент.Продукция_Элемент.GUID;
		Исключение
			Сообщить("Что-то пошло не так. Не удалось создать в Меркурий "+СтрЭлемент.Продукция_Элемент);
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	ЗначениеВРеквизитФормы(ФОбъект,"Объект");
КонецФункции

&НаСервере
Функция ИзменитьВСДЭлементы(ИмяКоманды = "UPDATE") Экспорт
	// Создает элемент справочника ВСД_Продукция_Элемент при отсутствии
	// Устанавливает Соответствие с Номенклатурой
	// Создает в Меркурии Продукццию
	Если (Не ЗначениеЗаполнено(Объект.Отправитель_Площадка)) или (Не ЗначениеЗаполнено(Объект.Организация)) Тогда
		Сообщить("Укажите Организацию и Площадку");
		Возврат "";
	КонецЕсли;
	ФОбъект = РеквизитФормыВЗначение("Объект");
	Для каждого СтрЭлемент из Объект.ВСДЭлементы Цикл
		Если НЕ Стрэлемент.Отметка Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ(ЗначениеЗаполнено(СтрЭлемент.GUID)) Тогда
			Сообщить("В строке "+стрЭлемент.НомерСтроки+" нет элемента для изменения или удаления в Меркурий, пропускаю.");
			Продолжить;
		КонецЕсли;
		
		Если Не(ИмяКоманды = "DELETE") Тогда
			// Юзер наколбасил в ТЧ
			Если НЕ ЗначениеЗаполнено(СтрЭлемент.Продукция) или
				НЕ ЗначениеЗаполнено(СтрЭлемент.ВидПродукции) или
				НЕ ЗначениеЗаполнено(СтрЭлемент.Номенклатура) или 
				НЕ ЗначениеЗаполнено(СтрЭлемент.ЕдиницаИзмерения)	Тогда
					Сообщить("Обязательные реквизиты не заполнены !!!");
					Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ (СтрЭлемент.Продукция_Элемент.Площадка = Объект.Отправитель_Площадка) Тогда
			Сообщить("Не совпадает Площадка с установленной у "+СтрЭлемент.Продукция_Элемент+" -> ПРОПУСКАЮ");
			Продолжить;
		КонецЕсли;
		Если ИмяКоманды = "UPDATE"  тогда
			// запишем в спр то, что пользователь поставил в ТЧ
			СтрЭлемент.Продукция_Элемент = СоздатьИзменитьПродукцияЭлемент1С(СтрЭлемент);
		КонецЕсли;
		
		Попытка 
			ФОбъект.Изменить_Продукцию(СтрЭлемент.Продукция_Элемент,ИмяКоманды);
			СтрЭлемент.GUID = СтрЭлемент.Продукция_Элемент.GUID;
		Исключение
			Сообщить("Что-то пошло не так. Не удалось создать в Меркурий "+СтрЭлемент.Продукция_Элемент);
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	ЗначениеВРеквизитФормы(ФОбъект,"Объект");
	//Перечитаем
	//ЗаполнитьНоменклатуруВТЗ();
КонецФункции


// события на форме
&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	Фобъект = РеквизитФормыВЗначение("Объект");
	ФОбъект.Инициализация();
	ЗначениеВРеквизитФормы(Фобъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере()
КонецПроцедуры

&НаКлиенте
Процедура Отправитель_ПлощадкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Отбор по ХС включим
	ГУИДХСдляОтбора = ПолучитьЗначениеРевизитаОбъекта_НаСервере(Объект.Отправитель_ХозСубъект,"GUID");
	ГУИДХСдляОтбора = ?(ЗначениеЗаполнено(ГУИДХСдляОтбора),ГУИДХСдляОтбора,"****");
	
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("GuidХозСубъекта", ГУИДХСдляОтбора);
	ПараметрыПодбора = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора,Отбор", Истина, Истина,ЗначениеОтбора);	
	ОткрытьФорму("Справочник.ВСД_Площадка.ФормаВыбора", ПараметрыПодбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Отправитель_ПлощадкаПриИзменении(Элемент)
	Объект.ВСДЭлементы.Очистить();
КонецПроцедуры



// на форме действия
&НаКлиенте
Процедура кнОтметитьВсе(Команда)
	Для Каждого стр Из Объект.ВСДЭлементы Цикл
		Если ЗначениеЗаполнено(стр.GUID) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ(стр.Отметка) Тогда 
			стр.Отметка = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура кнСнятьОтметки(Команда)
	для каждого стр из Объект.ВСДЭлементы Цикл
		стр.отметка = ложь;	
	КонецЦикла
КонецПроцедуры

&НаКлиенте
Процедура кнЗаполнить(Команда)
	выбНоменклатура=?(ЗначениеЗаполнено(ВыбГруппаНоменклатуры), ВыбГруппаНоменклатуры, ВыбСписокНоменклатуры);

	Если (НЕ ЗначениеЗаполнено(ВыбНоменклатура)) или
		(НЕ ЗначениеЗаполнено(ЭтаФорма.ВыбПродукция)) или
		(НЕ ЗначениеЗаполнено(ЭтаФорма.ВыбВидПродукции)) или
		(НЕ ЗначениеЗаполнено(ЭтаФорма.ВыбЕдиницаИзмерения)) или   
		(НЕ ЗначениеЗаполнено(ЭтаФорма.ВыбСрокГодности)) или  
		(НЕ ЗначениеЗаполнено(ЭтаФорма.ВыбТермическиеУсловия)) 	Тогда
		Предупреждение("Не все праметры для заполнения указаны");
		Возврат;
	КонецЕсли;
	ЗаполнитьНоменклатуруВТЗ();
	Элементы.ГрСтраницы.ТекущаяСтраница = Элементы.ГрТаблица;

КонецПроцедуры

&НаКлиенте
Процедура кнСоздать(Команда)
	ТекстВопроса = "Будут созданы элементы справочника ВСД_Продукция_Элемент
	|Установлено соответствие с Номенклатурой
	|Отправлен запрос в Меркурий на создание Наименований продукции
	|по площадке "+Объект.Отправитель_Площадка;
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПоказатьОповещениеПользователя("Выполняем запрос ",,"Ожидайте...",БиблиотекаКартинок.Информация32);
		СоздатьВСДЭлементы();
		ПоказатьОповещениеПользователя("Выполнено");
	КонецЕсли;
	//ЭтаФорма.ОбновитьОтображениеДанных(ЭтаФорма.Элементы.ВСДЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура кнИзменить(Команда)
	ТекстВопроса = "Будет отправлен запрос в Меркурий на изменение выбранной продукции
	|по площадке "+Объект.Отправитель_Площадка;
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПоказатьОповещениеПользователя("Выполняем запрос ",,"Ожидайте...",БиблиотекаКартинок.Информация32);
    	ИзменитьВСДЭлементы();
		ПоказатьОповещениеПользователя("Выполнено");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура кнУдалить(Команда)
	ТекстВопроса = "Будет отправлен запрос в Меркурий на Удаление выбранной продукции
	|по площадке "+Объект.Отправитель_Площадка;
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПоказатьОповещениеПользователя("Выполняем запрос ",,"Ожидайте...",БиблиотекаКартинок.Информация32);
    	ИзменитьВСДЭлементы("DELETE");
		ПоказатьОповещениеПользователя("Выполнено");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВСДЭлементыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	//Отказ = истина;
КонецПроцедуры

&НаКлиенте
Процедура ВСДЭлементыПередНачаломИзменения(Элемент, Отказ)
	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.GUID) Тогда
		//Отказ = true;
		//ОткрытьФорму(Элемент);
	ИначеЕсли ЗначениеЗаполнено(Элемент.ТекущиеДанные.Продукция_Элемент) Тогда
//		Если НЕ(Элемент.ТекущийЭлемент.Имя = "Отметка") Тогда
//			Отказ = true;	
//		КонецЕсли
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСведенияОПродЭлементе(ВыбНомен) 	
	//Фобъект = РеквизитФормыВЗначение("Объект");
	НайденЭлемент = ВСД.Получить_ВСД_Продукция_Элемент(ВыбНомен);
	//ЗначениеВРеквизитФормы(Фобъект,"Объект");
	СведенияОЭлементе = Новый Структура;
	СведенияОЭлементе.Вставить("Продукция_Элемент",НайденЭлемент);
	СведенияОЭлементе.Вставить("Продукция",НайденЭлемент.Продукция);
	СведенияОЭлементе.Вставить("ВидПродукции",НайденЭлемент.ВидПродукции);
	СведенияОЭлементе.Вставить("ЕдиницаИзмерения",НайденЭлемент.ЕдиницаИзмерения);
	СведенияОЭлементе.Вставить("СрокГодности",НайденЭлемент.СрокГодности);
	СведенияОЭлементе.Вставить("ТермическиеУсловияПеревозки",НайденЭлемент.ТермическиеУсловияПеревозки);
	СведенияОЭлементе.Вставить("GUID",НайденЭлемент.GUID);
	Возврат  СведенияОЭлементе;
КонецФункции

&НаКлиенте
Процедура ВСДЭлементыНоменклатураПриИзменении(Элемент)
	//ПерезаполнитьСтрокуТЗ(Элемент.Родитель.ТекущиеДанные);
	ПродЭлемент = ПолучитьСведенияОПродЭлементе(Элемент.Родитель.ТекущиеДанные.Номенклатура);
	Элемент.Родитель.ТекущиеДанные.Продукция_Элемент = ПродЭлемент.Продукция_Элемент;//ПерезаполнитьСтрокуТЗ(Элемент.Родитель.ТекущиеДанные.Номенклатура); //Проверим на наличие соответствия
	Элемент.Родитель.ТекущиеДанные.Продукция = ?(ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.Продукция_Элемент),ПродЭлемент.Продукция,ВыбПродукция);
	Элемент.Родитель.ТекущиеДанные.ВидПродукции = ?(ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.Продукция_Элемент),ПродЭлемент.ВидПродукции,ВыбВидПродукции);
	Элемент.Родитель.ТекущиеДанные.ЕдиницаИзмерения = ?(ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.Продукция_Элемент),ПродЭлемент.ЕдиницаИзмерения,ВыбЕдиницаИзмерения);
	Элемент.Родитель.ТекущиеДанные.СрокГодности = ?(ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.Продукция_Элемент),ПродЭлемент.СрокГодности,ВыбСрокГодности);
	Элемент.Родитель.ТекущиеДанные.ТермическиеУсловияПеревозки = ?(ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.Продукция_Элемент),ПродЭлемент.ТермическиеУсловияПеревозки,ВыбТермическиеУсловия);
	Элемент.Родитель.ТекущиеДанные.GUID = ?(ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.Продукция_Элемент),ПродЭлемент.GUID,"");
КонецПроцедуры

&НаКлиенте
Процедура ВСДЭлементыПродукцияПриИзменении(Элемент)
	Элемент.Родитель.ТекущиеДанные.ВидПродукции = "";
КонецПроцедуры


