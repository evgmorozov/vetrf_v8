Перем ПрошлыйИзмененныйГоловнаяОрганизация;

Процедура ЗаполнитьРеквизитыОбъекта(Отказ, ТекстСообщенияОшибки)
	
	Если Не ЗначениеЗаполнено(ЮрФизЛицо) Тогда
		ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;	
	КонецЕсли;
		
	ТекстСообщенияОшибки = "";
	Если Ссылка.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо И ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		ЗапросОрганизации = Новый Запрос;
		ЗапросОрганизации.УстановитьПараметр("ГоловнаяОрганизация", Ссылка);
		ЗапросОрганизации.Текст =
		"ВЫБРАТЬ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация";
		Если Не ЗапросОрганизации.Выполнить().Пустой() Тогда
			ТекстСообщенияОшибки = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация не может быть индивидуальным предпринимателем, для неё зарегистрированы обособленные подразделения!") + Символы.ПС;
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И НЕ ЗначениеЗаполнено(ИндивидуальныйПредприниматель) Тогда
		ТекстСообщенияОшибки = ТекстСообщенияОшибки + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организации - индивидуальному предпринимателю не сопоставлено физ. лицо!") + Символы.ПС;
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	ИННОрг = ?(ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо, ИндивидуальныйПредприниматель.ИНН, ИНН);

	Если Ссылка.ИНН <> ИННОрг Тогда
		Если НЕ ПустаяСтрока(ИННОрг) И НЕ РегламентированнаяОтчетность.ИННСоответствуетТребованиям(ИННОрг, ЮрФизЛицо) Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки +  "ИНН " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " задан неверно!" + Символы.ПС;
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	Если ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо И Ссылка.КПП <> КПП Тогда
		Если НЕ ПустаяСтрока(КПП) И СтрДлина(КПП) <> 9 Тогда
			ОшибкаКПП = Не ОбщегоНазначенияПереопределяемый.КППОрганизацииСоответствуетТребованиям(КПП, ТекстСообщенияОшибки);
			Отказ = ?(ОшибкаКПП, ОшибкаКПП, Отказ);
		КонецЕсли;
	КонецЕсли;
	Если Ссылка.ОГРН <> ОГРН Тогда
		Если НЕ ПустаяСтрока(ОГРН) Тогда
			ОшибкаОГРН = Не ОбщегоНазначенияПереопределяемый.ОГРНСоответствуетТребованиям(ОГРН, ЮрФизЛицо, ТекстСообщенияОшибки);
			Отказ = ?(ОшибкаОГРН, ОшибкаОГРН, Отказ);
		КонецЕсли;
	КонецЕсли;
	Если ВидОбменаСКонтролирующимиОрганами = Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменВУниверсальномФормате И УчетнаяЗаписьОбмена.Пустая() Тогда
		Отказ = Истина;
		ТекстСообщенияОшибки = ТекстСообщенияОшибки + "Не выбрана учетная запись для документооборота с ФНС!" + Символы.ПС;
	КонецЕсли;
	Если НЕ Отказ Тогда
		Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И ЗначениеЗаполнено(ИндивидуальныйПредприниматель) Тогда
			ИНН = ИндивидуальныйПредприниматель.ИНН;
		КонецЕсли;
		Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			КПП								= "";
			КодОКОНХ						= "";
			ГоловнаяОрганизация 			= Неопределено;
		ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
			ИндивидуальныйПредприниматель 	= Неопределено;
		КонецЕсли;
		ИНН = СокрЛП(ИНН);
		ОГРН = СокрЛП(ОГРН);
		Если ВидОбменаСКонтролирующимиОрганами.Пустая() Тогда
			ВидОбменаСКонтролирующимиОрганами = Перечисления.ВидыОбменаСКонтролирующимиОрганами.ОбменОтключен;
		КонецЕсли;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПолучитьРабочуюДату() < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() И Не ЗначениеЗаполнено(ВидСтавокЕСНиПФР) Тогда
		ВидСтавокЕСНиПФР = Перечисления.ВидыСтавокЕСНиПФР.ДляНеСельскохозяйственныхПроизводителей;	
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события "ПередЗаписью" Объекта
//
Процедура ПередЗаписью(Отказ)
	
	Если НЕ ОбменДанными.Загрузка Тогда
		
		ТекстСообщенияОшибки = "";
		
		ЗаполнитьРеквизитыОбъекта(Отказ, ТекстСообщенияОшибки);
		
		Если Отказ Тогда
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщенияОшибки, Отказ);
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			ПрошлыйИзмененныйГоловнаяОрганизация = ?(Не ЭтоНовый() и Не Ссылка.ГоловнаяОрганизация = ГоловнаяОрганизация, Ссылка.ГоловнаяОрганизация, Неопределено);
			НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, ГоловнаяОрганизация);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Функция записывает новое значение ИНН для обособленных организаций.
//
// Параметры
//
// Возвращаемое значение:
//   Строка   – пустая строка, если записали ИНН,
//				текст об ошибке, если ИНН не удалось записать. 
//
Функция ОбновитьИННОбособленныхОрганизаций()

	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстСообщения = "";
	ЗапросОрганизации = Новый Запрос;
	ЗапросОрганизации.УстановитьПараметр("ГоловнаяОрганизация", Ссылка);
	ЗапросОрганизации.УстановитьПараметр("ИНН", ИНН);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация И
	|	Организации.ИНН <> &ИНН";
	
	ЗапросОрганизации.Текст = ТекстЗапроса;
	ВыборкаЗапроса = ЗапросОрганизации.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		ОбособленнаяОрганизация = ВыборкаЗапроса.Ссылка.ПолучитьОбъект();
		Попытка
		    ОбособленнаяОрганизация.Заблокировать();
		Исключение
			ТекстСообщения = "Организация: " + ВыборкаЗапроса.Ссылка + " - объект заблокирован.";
			Возврат ТекстСообщения
		КонецПопытки;
	КонецЦикла;	    
	
	ВыборкаЗапроса.Сбросить(); 
	Пока ВыборкаЗапроса.Следующий() Цикл
		ОбособленнаяОрганизация = ВыборкаЗапроса.Ссылка.ПолучитьОбъект();
		ОбособленнаяОрганизация.ИНН = ИНН;
		ОбособленнаяОрганизация.Записать()
	КонецЦикла; 

	Возврат ТекстСообщения

КонецФункции

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗаписиИНН = ОбновитьИННОбособленныхОрганизаций();
	Если НЕ ПустаяСтрока(ТекстЗаписиИНН) Тогда
		Сообщить(ТекстЗаписиИНН + Символы.ПС + "Элемент не записан!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка,ПрошлыйИзмененныйГоловнаяОрганизация, Отказ);
	
КонецПроцедуры

