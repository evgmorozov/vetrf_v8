// Модуль для переопределения ф-ций обработки Интеграция_ГИС_Меркурий
// ТЕСТ 15/08/2018
// Zhukov@kb99.pro

// Для КРК

//Содержит список функций модуля, используется для идентификации переопределения из основной обработки
Функция НайтиПереопределяемуюФункцию(ИскомоеИмя) экспорт
	
	СЗ = новый СписокЗначений;
	СЗ.Добавить("ЗаполнитьРеквизитыСтрокиВСД");
	СЗ.Добавить("ПолучитьМаркировку");
//	СЗ.Добавить("ПолучитьОрганизациюПоУмолчанию");
	СЗ.Добавить("ПолучитьИНН");
//	СЗ.Добавить("ПолучитьНомерДокБезПрефикса");
	СЗ.Добавить("ЗаполнитьСвязанныеДокументы");
	СЗ.Добавить("ПолучитьНомерАвто");

	Если СЗ.НайтиПоЗначению(ИскомоеИмя) = Неопределено Тогда
		Возврат Ложь
	Иначе
		Возврат Истина
	КонецЕсли;
		
КонецФункции


//КРК
Функция ПолучитьНомерАвто(ДокОснование) Экспорт
	Возврат "Газель"; //КРК
КонецФункции

Функция ПолучитьИНН(ВыбКлиент) экспорт
	//Переделать в Использование Сведений о Контрагенте
	Попытка		
		ИННКПП = ВыбКлиент.ИНН;
	Исключение
		ИННКПП = "";
	КонецПопытки;
	Возврат СокрЛП(ИННКПП);
КонецФункции


Функция ПолучитьМаркировку( Единица, Покупатель) Экспорт
	Рез = "";
	//Номенклатура = Единица.Владелец;	
	Рез = Единица.ШтрихКод;
	
	Возврат Рез;
КонецФункции

//Артикул КРК
Функция ПолучитьСвойствоКонтрагентаАртикул(ВыбКонтрагент)
	Запрос = Новый Запрос;
	Запрос.Текст = "	
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ВыбКонтрагент
	|	И ЗначенияСвойствОбъектов.Свойство.Наименование = &АртикулСсылка";
	Запрос.УстановитьПараметр("ВыбКонтрагент", ВыбКонтрагент);
	Запрос.УстановитьПараметр("АртикулСсылка", "АртикулСсылка");
	ТзВрем = Запрос.Выполнить().Выбрать();
	Если ТзВрем.Следующий() Тогда
		Возврат ТзВрем.Значение.Наименование;
	иначе
		Возврат "";//Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка();	
	КонецЕсли;	
КонецФункции

Функция ПолучитьАртикулНоменклатуры(ВыбНоменклатура, СвойствоКонтрагентаАртикул)
	Запрос = Новый Запрос;
	Запрос.Текст = "	
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ВыбНоменклатура
	|	И ЗначенияСвойствОбъектов.Свойство.Наименование = &СвойствоАртикул";
	Запрос.УстановитьПараметр("ВыбНоменклатура", ВыбНоменклатура);
	Запрос.УстановитьПараметр("СвойствоАртикул", СвойствоКонтрагентаАртикул);
	ТзВрем = Запрос.Выполнить().Выбрать();
	Если ТзВрем.Следующий() Тогда
		Возврат ТзВрем.Значение;
	иначе
		Возврат "";	
	КонецЕсли;
	
КонецФункции

Функция ЗаполнитьРеквизитыСтрокиВСД(Интеграция, НоваяСтрока, СтрокаОснования, ДокСсылка) Экспорт
	//Интеграция это Интеграция_ГИС_Меркурий ЭтотОбъект
	СписокКонстант = Интеграция.СписокКонстант;
	Попытка
		РеквАртикул = ПолучитьСвойствоКонтрагентаАртикул(ДокСсылка.Документоснование.Контрагент);
	исключение
		РеквАртикул = ""; //Нет основания - нет Контрагента
	КонецПопытки;
	
	НоваяСтрока.Номенклатура 			= СтрокаОснования.Номенклатура;
	НоваяСтрока.Продукция_Элемент 		= СтрокаОснования.Продукция_Элемент;
	НоваяСтрока.ЕдиницаИзмерения 		= НоваяСтрока.Партия.ЕдиницаИзмерения;
//	НоваяСтрока.Продукция 				= НоваяСтрока.Партия.Продукция;
//	НоваяСтрока.ВидПродукции 			= НоваяСтрока.Партия.ВидПродукции;
//	НоваяСтрока.НаименованиеПродукции 	= НоваяСтрока.Продукция_Элемент.Наименование; 
	НоваяСтрока.GTIN 					= НоваяСтрока.Продукция_Элемент.GTIN;
	НоваяСтрока.Артикул	 				= ?(РеквАртикул="","",ПолучитьАртикулНоменклатуры(СтрокаОснования.Номенклатура,РеквАртикул));//НоваяСтрока.Продукция_Элемент.Артикул;
	Попытка
		НоваяСтрока.Цель 					= НоваяСтрока.Продукция_Элемент.ВидПродукции.Цель;
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Цель) Тогда 
			НоваяСтрока.Цель = СписокКонстант.Получить("ВСДЦель");
		КонецЕсли;
	Исключение КонецПопытки;
	// Упаковка на уровнях
	Попытка
			
		Если ЗначениеЗаполнено(СтрокаОснования.Упаковки) Тогда
			Если Цел(СтрокаОснования.Упаковки/СтрокаОснования.Количество*НоваяСтрока.Количество) = 0 Тогда
				Сообщить("Нулевое кол-во упаковки у "+СтрокаОснования.Продукция_Элемент+" в "+ДокСсылка);	
			иначе
			
				СтрокаУпак = докСсылка.УровниУпаковки.Добавить(); //Документы.ВСД2_транзакция.СоздатьДокумент().УровниУпаковки.Добавить();
				СтрокаУпак.СтрокаПродукции = НоваяСтрока.НомерСтроки;
				СтрокаУпак.Количество = Цел(СтрокаОснования.Упаковки/СтрокаОснования.Количество*НоваяСтрока.Количество); //Пропорционально Распределенному количеству
				СтрокаУпак.НомерУровня = СписокКонстант.Получить("ПарамНомерУровняУпаковкиДляВСД");//СписокПараметров.Получить("ПарамНомерУровняУпаковкиДляВСД");
				СтрокаУпак.ФормаУпаковки = СписокКонстант.Получить("ПарамФормаУпаковкиДляВСД");//СписокПараметров.Получить("ПарамФормаУпаковкиДляВСД");;
				//Маркировки
	//			СтрокаМарк = докСсылка.Маркировка.Добавить();
	//			СтрокаМарк.Строкапродукции = СтрокаУпак.СтрокаПродукции;
	//			СтрокаМарк.НомерУровня = СтрокаУпак.НомерУровня;
	//			СтрокаМарк.Класс = Перечисления.ВСД_Маркировка.BN;
	//			СтрокаМарк.Маркировка = "ТЕСТ";  //ПолучитьМаркировку( ТЗПартий.Номенклатура.ОсновнаяЕдиница, Контрагент);
			КонецЕсли;
		КонецЕсли;
			
	Исключение 
		Сообщить(ОписаниеОшибки(),СтатусСообщения.Важное);	
	КонецПопытки;
	
КонецФункции

//Связанные документы 
Функция ПолучитьДатуНомерТорг12(ДокОснование)
	Возврат "";
	
	СвДок = Новый Структура;
	СвДок.Вставить("НомерДок","ТЕСТ_№_Заказа");
	СвДок.Вставить("ДатаДок",ТекущаяДата());
	Возврат СвДок;
	
КонецФункции
//КРК
Функция ДатаНомерЗаказаВКомментарии(Докоснование)
	//Код из печатной формы
			// номер заказа	
			стр = Найти(Докоснование.Комментарий,"№");
			Если стр > 0 тогда
				строка = Прав(Докоснование.Комментарий,СтрДлина(Докоснование.Комментарий)-стр);
				стр = 0;
				стр = Найти(строка," ");
				Если стр > 0 тогда
					заказ = Сред(строка,1,стр);	
				Иначе
					заказ = "";
				КонецЕсли;
			Иначе
				заказ = "";
			КонецЕсли;
			стр = Найти(строка," от ");
			Если стр > 0 тогда
				строка1 = Прав(строка,СтрДлина(строка)-стр-3);
				стр = 0;
				стр = Найти(строка1," ");
				Если стр > 0 тогда
					датаДок = Сред(строка1,1,стр);	
				Иначе
					датадок = "";
				КонецЕсли;
			Иначе
				датадок = "";
			КонецЕсли;
			
	Если ДатаДок = "" Тогда
		Возврат "";
	Иначе
		 ДатаДок = ДатаДок+ " 00:00:00";				
	КонецЕсли;
			
	СвДок = Новый Структура;
	СвДок.Вставить("НомерДок",заказ);
	СвДок.Вставить("ДатаДок",Дата(ДатаДок));
	Если ЗначениеЗаполнено(Заказ) тогда
		Возврат СвДок;
	Иначе
		Возврат "";
	КонецЕсли;	
КонецФункции

Функция ДатаНомерЗаказаВРегистре(Докоснование)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Объект КАК Объект,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ЗначенияСвойствОбъектов.Свойство.Наименование = &СвойствоДата
	               |				ТОГДА ЗначенияСвойствОбъектов.Значение
	               |		КОНЕЦ) КАК ДатаЗаказа,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ЗначенияСвойствОбъектов.Свойство.Наименование = &СвойствоНомер
	               |				ТОГДА ЗначенияСвойствОбъектов.Значение
	               |		КОНЕЦ) КАК НомерЗаказа
	               |ИЗ
	               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Объект = &ВыбДок
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗначенияСвойствОбъектов.Объект";
	Запрос.УстановитьПараметр("ВыбДок", Докоснование.Ссылка);
	Запрос.УстановитьПараметр("СвойствоНомер", "НомерЗаказаПокупателя");
	Запрос.УстановитьПараметр("СвойствоДата", "ДатаЗаказаПокупателя");
	ТзВрем = Запрос.Выполнить().Выбрать();
	Если ТзВрем.Следующий() Тогда
		СвДок = Новый Структура;
		СвДок.Вставить("НомерДок",ТзВрем.НомерЗаказа);
		СвДок.Вставить("ДатаДок",ТзВрем.ДатаЗаказа);
		Возврат СвДок;
	иначе
		Возврат "";	
	КонецЕсли;
	
КонецФункции


Функция ПолучитьДатуНомерЗаказаПоставщика(ДокОснование)
	//Возврат ДатаНомерЗаказаВКомментарии(Докоснование); // Из Комментария
	Возврат ДатаНомерЗаказаВРегистре(Докоснование); // из Регистра сведений
КонецФункции

Функция ПолучитьСвязанныйДокумент(ДокОснование,ИмяДокумента)
	Если ИмяДокумента = "Заказ" Тогда
		Возврат ПолучитьДатуНомерЗаказаПоставщика(ДокОснование);
	ИначеЕсли ИмяДокумента = "Торг12" Тогда
		Возврат ПолучитьДатуНомерТорг12(ДокОснование);
	Иначе
		Возврат "";
	КонецЕсли;
	// и тд
	СвДок = Новый Структура;
	СвДок.Вставить("НомерДок","ТЕСТ_№_Заказа");
	СвДок.Вставить("ДатаДок",ТекущаяДата());
	Возврат "";//СвДок;
КонецФункции

Процедура ЗаполнитьСвязанныеДокументы(ДокВСД) экспорт
	СведенияОСвязанномДоке = ПолучитьСвязанныйДокумент(ДокВСД.ДокументОснование, "Заказ");
	Если ЗначениеЗаполнено(СведенияОСвязанномДоке) тогда
		ДокВСД.НомерЗаказаПокупателя = СведенияОСвязанномДоке.НомерДок;
		ДокВСД.ДатаЗаказаПокупателя =  СведенияОСвязанномДоке.ДатаДок;
	КонецЕсли;
	
	СведенияОСвязанномДоке = ПолучитьСвязанныйДокумент(ДокВСД.ДокументОснование, "Торг12");
	Если ЗначениеЗаполнено(СведенияОСвязанномДоке) тогда
		ДокВСД.ТОРГ12Номер = СведенияОСвязанномДоке.НомерДок;
		ДокВСД.ТОРГ12Дата =  СведенияОСвязанномДоке.ДатаДок;
	КонецЕсли;
	//***************
	
КонецПроцедуры
