Перем Выбор_ВСД_Площадка;
Перем СзПарамГрузополучатель;

Процедура кнПолучитьПартииНажатие(Элемент)
	ПолучитьПартии( );
КонецПроцедуры

Процедура кнПолучитьПартии2Нажатие(Элемент)
	ПолучитьПартии2( Отправитель_Площадка )
КонецПроцедуры

Процедура ПриОткрытии(Отказ)
	Если Организация.Пустая() Тогда
		Организация   = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;	
	
	Инициализация();	
	Попытка
		Версия = Компонента.Версия;	
	Исключение
		Версия = "Не зарегистрирована";
	КонецПопытки;
	//ЖД РеквизитГрузополучатель
	СзПарамГрузополучатель = Новый СписокЗначений;
    СзПарамГрузополучатель.Добавить(0,"Контрагент");
    СзПарамГрузополучатель.Добавить(1,"Адрес Доставки");
	СзПарамГрузополучатель.Добавить(2,"Другое...");
	ТекПарам = СзПарамГрузополучатель.НайтиПоЗначению(РеквизитГрузополучатель);
	Если ТекПарам = Неопределено Тогда
		ЭлементыФОрмы.НадпГрузополучатель.Заголовок = "Установите!!!";
	Иначе
		ЭлементыФОрмы.НадпГрузополучатель.Заголовок = ТекПарам.Представление;
	КонецЕсли;
	
	//Если Не ОтбиратьСобытияПоДокументу Тогда
		
	//ДатаНачалаОтбора	= НачалоМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
	//ДатаОкончанияОтбора	= КонецМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
	ДатаНачалаОтбора = ТекущаяДата();
	ДатаОкончанияОтбора = ТекущаяДата();
		
	//КонецЕсли;
	//
	//Если Не ЗначениеЗаполнено(ПериодРегистрации) Тогда
	//	ПериодРегистрации = НачалоМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату())
	//КонецЕсли;
			
	Автозаполнение(ЭтаФорма.ФПеремещения);

	//Если ЗначениеЗаполнено(ВСД_транзакция) Тогда
	//	Отправить_ВСД_транзакция( ВСД_транзакция );
	//	ЭтаФорма.Закрыть();
	//КонецЕсли;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	ТекПарам = СзПарамГрузополучатель.НайтиПоЗначению(РеквизитГрузополучатель);
	Если ТекПарам = Неопределено Тогда
		ЭлементыФОрмы.НадпГрузополучатель.Заголовок = "Установите!!!";
	Иначе
		ЭлементыФОрмы.НадпГрузополучатель.Заголовок = ТекПарам.Представление;
	КонецЕсли;
КонецПроцедуры


Процедура СохранитьПараметры( КлючНастроек )
	
	СписокКонстант=Новый("Соответствие");
	СписокКонстант.Вставить("param_username", param_username);
	СписокКонстант.Вставить("param_password", param_password);
	СписокКонстант.Вставить("param_issuer_id", param_issuer_id);
	СписокКонстант.Вставить("param_service_id", param_service_id);
	СписокКонстант.Вставить("param_api_key", param_api_key);
	СписокКонстант.Вставить("param_intiator_login", param_intiator_login);
	СписокКонстант.Вставить("param_vetdoctor_login", param_vetdoctor_login);
	СписокКонстант.Вставить("param_vetdoctor_fio", param_vetdoctor_fio);	
	СписокКонстант.Вставить("param_vetdoctor_post", param_vetdoctor_post);	
	
	СписокКонстант.Вставить("Отправитель_Площадка", Отправитель_Площадка);
	СписокКонстант.Вставить("Отправитель_ХозСубъект", Отправитель_ХозСубъект );
	
	СписокКонстант.Вставить("Страна", Страна);
	СписокКонстант.Вставить("Регион", Регион);
	СписокКонстант.Вставить("Город", Город);
	СписокКонстант.Вставить("ВСД_Экспертиза", ВСД_Экспертиза);
	СписокКонстант.Вставить("ВСД_Местность", ВСД_Местность );
	СписокКонстант.Вставить("ВСД_ОсобыеОтметки", ВСД_ОсобыеОтметки);
	
	СписокКонстант.Вставить("ПаузаСек", ПаузаСек);	
	СписокКонстант.Вставить("РеквизитГрузополучатель", РеквизитГрузополучатель);	
			
	СписокКонстант.Вставить("ОтладкаЗапросовXML", ОтладкаЗапросовXML);	
	
	//СписокКонстант.Вставить(ВСД_Продукция_Свойство, "ВСД_Продукция_Свойство");
	СписокКонстант.Вставить("Перевозчик_ХозСубъект", Перевозчик_ХозСубъект);		
	//СписокКонстант.Вставить(НазваниеРеквизитаКоличествоМест, "НазваниеРеквизитаКоличествоМест");
	СписокКонстант.Вставить("ПропускатьПустыеСвойства", ПропускатьПустыеСвойства);		
	//СписокКонстант.Вставить(НазваниеВидаДокументаРеализация, "НазваниеВидаДокументаРеализация");		
	//СписокКонстант.Вставить(НазваниеРеквизитаКоличество, "НазваниеРеквизитаКоличество");
	
	СписокКонстант.Вставить("КаталогЛогов", КаталогЛогов);
	СписокКонстант.Вставить("ПаузаСек", ПаузаСек);		
	
	СписокКонстант.Вставить("ПолноеИмяФайлаОбработки", ПолноеИмяФайлаОбработки);		
	СписокКонстант.Вставить("ТестовыйРежим", ТестовыйРежим);	
	СписокКонстант.Вставить("ВыводитьПодробнуюИнформацию", ВыводитьПодробнуюИнформацию);	
	
	СписокКонстант.Вставить("Смещение", Смещение);
	СписокКонстант.Вставить("АвтоЗаписьВСДСоответствия", АвтоЗаписьВСДСоответствия);
	
	//ИмяФайла = ИмяФайлаНастроек();
	//ЗначениеВФайл(ИмяФайла,СписокКонстант);
	////Предупреждение("Настройки сохранены!",3);
	//Сообщить("Настройки сохранены в "+ИмяФайла);
	
   // ключи могут быть произвольными строками
    КлючОбъекта  = "ВСД";
    //КлючНастроек = "НастройкиВСД";
    // настройки могут быть произвольного типа
	//Настройки    = Новый Структура;
	//Настройки.Вставить("Настройки", "123");

    // имя пользователя - пользователь владелец настроек, если параметр не указать,
    // то настройки будут сохранены для ТЕКУЩЕГО пользователя
    ИмяПользователя = ИмяПользователя();
    ХранилищеОбщихНастроек.Сохранить(КлючОбъекта,  Строка(КлючНастроек), СписокКонстант, , ИмяПользователя);		
	
	Сообщить("Настройки сохранены для "+ИмяПользователя+" - "+КлючНастроек);
КонецПроцедуры

Процедура кнСохранитьПараметрыНажатие(Элемент)
	СохранитьПараметры( Организация );
КонецПроцедуры

Процедура кнХС_ПолучитьGuidНажатие(Элемент)
	ХС_ПолучитьGuid(ВыбХС);
КонецПроцедуры

Функция ПроверитьDll() 
	Попытка
		Инициализация();
		//ВыборВерсии();
		
		//Предупреждение("Библиотека SoapDLL_test.dll зарегистрирована ");
		Попытка 
			Предупреждение("Библиотека "+ИмяDLL+".dll зарегистрирована, версия = "  + Компонента.Версия);
			Возврат 1;
		Исключение 
			Предупреждение("Библиотека "+ИмяDLL+" не зарегистрированна!");
			Возврат 0;
		Конецпопытки;	
	Исключение 
		Предупреждение("Библиотека "+ИмяDLL+" не зарегистрированна!");
		Возврат 0
	Конецпопытки;
КонецФункции

Процедура кнПроверитьDllНажатие(Элемент)
	ПроверитьDll();
КонецПроцедуры

Процедура кнЗагрузитьПлощадкиНажатие(Элемент)
	ЗагрузитьПлощадки(ВыбХС);
КонецПроцедуры

Процедура кнЗагрузитьСтраныНажатие(Элемент)
	ИнициализацияХС_ЗагрузитьСтраны();
КонецПроцедуры

Процедура кнЗагрузитьРегионыНажатие(Элемент)
	ИнициализацияХС_ЗагрузитьРегионы(Страна);
КонецПроцедуры

Процедура кнЗагрузитьГородаНажатие(Элемент)
	ИнициализацияХС_ЗагрузитьГорода(Регион);
КонецПроцедуры

Процедура кнЗагрузитьПродукциюНажатие(Элемент)
	ИнициализацияХС_ЗагрузитьПродукцию(1);
КонецПроцедуры

Процедура кнЗагрузитьЕдИзмНажатие(Элемент)
	ИнициализацияХС_ЗагрузитьЕдиницыИзмерения();
КонецПроцедуры

Процедура кнИнициализацияНажатие(Элемент)
	ИнициализацияХС();
КонецПроцедуры

Процедура кнСоздатьПлощадкуНажатие(Элемент)
	СоздатьПлощадку(ВыбПлощадка)
КонецПроцедуры

Процедура кнПривязатьПлощадкуНажатие(Элемент)
	СоздатьСвязьХозсубъектПлощадка(ВыбПлощадка)
КонецПроцедуры

Процедура кнОтправить_ВСД_ИсходящийНажатие(Элемент)
	Отправить_ВСД_Исходящий( ВСД_исходящий )
КонецПроцедуры

Процедура кнОтправить_ВСД_транзакцияНажатие(Элемент)  Экспорт
	Отправить_ВСД_транзакция( ВСД_транзакция );
КонецПроцедуры

Процедура кнОтправить_ВСД_ПроизводствоНажатие(Элемент)  Экспорт
	Отправить_ВСД2_Производство( ВСД_производство );
КонецПроцедуры


Процедура кнЗагрузитьПартииНажатие(Элемент)
	//ПолучитьПартии();
	ПолучитьПартии2( Отправитель_Площадка );
КонецПроцедуры

Процедура кнЗаполнитьНажатие(Элемент)
	//ЖД Тест 
	
	Автозаполнение(ЭтаФорма.ФПеремещения);
КонецПроцедуры

Процедура кнЗагрузитьПлощадкиТЧНажатие(Элемент)
	ЗагрузитьПлощадкиСписком();	
	Автозаполнение(ЭтаФорма.ФПеремещения);
КонецПроцедуры

// Обработка выбора формы
Процедура ПлощадкаНачалоВыбора(Элемент, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	Выбор_ВСД_Площадка = Элемент.Значение; // для последующего удаления привязки
   	ФормаВыбора =  Справочники.ВСД_Площадка.ПолучитьФормуВыбора(, Элемент);
    ФормаВыбора.РежимВыбора = Истина;
    ФормаВыбора.Отбор.GuidХозСубъекта.Установить(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.ХозСубъект.GUID, Истина);
    ФормаВыбора.Открыть();	
КонецПроцедуры

Процедура ТабличноеПоле1ПлощадкаПриИзменении(Элемент)
	
	//Очистим старое значение
	Попытка
		Если НЕ(Выбор_ВСД_Площадка = Справочники.ВСД_Площадка.ПустаяСсылка()) Тогда 
			СпрОб = Выбор_ВСД_Площадка.ПОлучитьОбъект();
			СпрОб.Контрагент = "";
			СпрОб.Записать();
		КонецЕсли;		
	Исключение
	КонецПопытки;
	
	СпрОб = Элемент.Значение.ПОлучитьОбъект();
	СпрОб.Контрагент = ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Грузополучатель;
	СпрОб.Записать();
КонецПроцедуры


Процедура кнСоздатьВСДНажатие(Элемент)
	СоздатьВСД();
КонецПроцедуры


Процедура кнЗаполнитьТаблицуПартийНажатие(Элемент)
	ЗаполнитьТаблицуПартий();
	ЭтаФорма.Панель.ТекущаяСтраница = ЭтаФорма.Панель.Страницы.Страница5;
КонецПроцедуры


Процедура ПартииПартияПриИзменении(Элемент)
	ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Количество = Элемент.Значение.Количество;
КонецПроцедуры


Процедура ПартииПартияНачалоВыбора(Элемент, СтандартнаяОбработка)
// ЖД ТЕСТ Выбор партий по фильтру
	СтандартнаяОбработка = Ложь;
	ВСД.ВыборПартийФильтр(Элемент, ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.ВСД_Продукция_Элемент,Отправитель_Площадка);

// Phsin		
//	СтандартнаяОбработка = Ложь;
// 	ФормаВыбора =  Справочники.ВСД_Партия.ПолучитьФормуВыбора(, Элемент);
//    ФормаВыбора.РежимВыбора = Истина;
//    ФормаВыбора.Отбор.Продукция_Элемент.Установить(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.ВСД_Продукция_Элемент, Истина);
//    ФормаВыбора.Открыть();	
КонецПроцедуры


Процедура кнОтправитьВСДНажатие(Элемент)
	ОтправитьСписокВСД();
КонецПроцедуры


Процедура ТабличноеПоле1ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ПустаяСтрока(ДанныеСтроки.ХозСубъект.GUID)Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(255,120,90);   //красный
	ИначеЕсли ДанныеСтроки.Площадка = Справочники.ВСД_Площадка.ПустаяСсылка() Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(255,255,127);   //желтый
	ИначеЕсли ДанныеСтроки.ВСД.Статус = "COMPLETED" Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(0, 150, 26);   //
	КонецЕсли;
	
КонецПроцедуры


Процедура ПартииПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Партия = Справочники.ВСД_Партия.ПустаяСсылка() Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(255,255,127);   //желтый
	ИначеЕсли ДанныеСтроки.Количество < ДанныеСтроки.КоличествоСписания Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(255,0,0);   //красный
	КонецЕсли;

КонецПроцедуры


Процедура Организация1ПриИзменении(Элемент)
	//ЗагрузитьПараметры(Организация);
	Инициализация( );
	Автозаполнение(ЭтаФорма.ФПеремещения);
КонецПроцедуры


Процедура кнЗагрузитьПлощадкиПоНаименованиюНажатие(Элемент)
	НайтиПлощадкиПоНазванию(ВыбХС, Регион, 1);
КонецПроцедуры


Процедура кнЗагрузитьПлощадкиСпискомПоНаименованиюНажатие(Элемент)
	ЗагрузитьПлощадкиСписком(1);
	СнятьПометки();
КонецПроцедуры


Процедура КнопкаВыбораПериодаНажатие(Элемент)	
	
	Если НП.Редактировать() Тогда
		
		ДатаНачалаОтбора = НП.ПолучитьДатуНачала();
		ДатаОкончанияОтбора = НП.ПолучитьДатуОкончания();
				
		Автозаполнение(ЭтаФорма.ФПеремещения);
	КонецЕсли;
	
КонецПроцедуры


Процедура кнХС_СоздатьНажатие(Элемент)
	ХС_Создать(ВыбХС);
КонецПроцедуры


Процедура кнОтвет_ВСД_транзакцияНажатие(Элемент)
	appID = ВСД_транзакция.applicationID;
	ПолучитьРезультат_ВСД(appID, ВСД_транзакция, Ложь ); 
КонецПроцедуры


Процедура УстановитьПометки()
	Для Каждого стр Из Отгрузки Цикл
		Если НЕ(стр.Отметка) Тогда 
			стр.Отметка = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СнятьПометки()
	Для Каждого стр Из Отгрузки Цикл
		Если (стр.Отметка) Тогда 
			стр.Отметка = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры



Процедура кнПолучитьСписокПродукцииНажатие(Элемент)
	Получить_Список_Продукции( Отправитель_Площадка )
КонецПроцедуры


Процедура кнСоздатьПродукциюНажатие(Элемент)
	Изменить_Продукцию(ВыбПродукция,"CREATE");
КонецПроцедуры



Процедура кнСоответствияНажатие(Элемент)
	Форма = ПолучитьФорму("Форма_Соответствия");
	ОткрытьФорму(Форма);
КонецПроцедуры

Процедура кнПолучитьИнфоПродукцияНажатие(Элемент)
	Получить_Инфо_Продукции( ВыбПродукция );
КонецПроцедуры

//*******Аннулирование
Процедура кнАннулироватьВСДНажатие(Элемент)
	Отправить_ВСД2_Аннулирование(ВСД_Аннулируемый);
КонецПроцедуры

Процедура кнАннулироватьТранзакциюНажатие(Элемент)
	Аннулировать_ВСД2_транзакция( Транзакция_Аннулируемый )
КонецПроцедуры

Процедура кнАннулироватьВыбранныеВСДНажатие(Элемент)
	Ответ = Вопрос("Аннулировать выбранные транзакции ?",РежимДиалогаВопрос.ДаНет,0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
    	Возврат;
	КонецЕсли;
	
	Отправить_ВСД2_АннулированиеВыбранные();
КонецПроцедуры


Процедура кнПечатьНажатие(Элемент)
	СЗ = Новый СписокЗначений;
    СЗ.Добавить(1,"ВСД");
    СЗ.Добавить(2,"Реестр");
	//Стремная менюшка чет
    ВыбранныйЭлемент = ВыбратьИзСписка(СЗ, ЭлементыФОрмы.кнПечать);	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ВыбЗн = ВыбранныйЭлемент.Значение;
	Если ВыбЗн = 1 Тогда
		ПечатьСокрВСД(ФлНаПринтер);	
	ИначеЕсли ВыбЗн = 2 Тогда
		ПечатьРеестра(ФлНаПринтер);	
	КонецЕсли;
КонецПроцедуры


Процедура кнГрузополучательНажатие(Элемент)
    ВыбранныйЭлемент = ВыбратьИзСписка(СзПарамГрузополучатель, ЭлементыФОрмы.НадпГрузополучатель);	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	РеквизитГрузополучатель = ВыбранныйЭлемент.Значение;	
	ЭлементыФОрмы.НадпГрузополучатель.Заголовок = ВыбранныйЭлемент.Представление;
КонецПроцедуры

//ЖД ************ Фильтры документов по ХС - чтобы не отправляли с другой фирмы
Процедура Транзакция_АннулируемыйНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
 	ФормаВыбора =  Документы.ВСД_транзакция.ПолучитьФормуВыбора(, Элемент);
    ФормаВыбора.РежимВыбора = Истина;
    ФормаВыбора.Отбор.Отправитель_ХозСубъект.Установить(Отправитель_ХозСубъект, Истина);
    ФормаВыбора.Открыть();	
КонецПроцедуры

Процедура ВСД_транзакцияНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
 	ФормаВыбора =  Документы.ВСД_транзакция.ПолучитьФормуВыбора(, Элемент);
    ФормаВыбора.РежимВыбора = Истина;
    ФормаВыбора.Отбор.Отправитель_ХозСубъект.Установить(Отправитель_ХозСубъект, Истина);
    ФормаВыбора.Открыть();
КонецПроцедуры

Процедура ВСД_производствоНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
 	ФормаВыбора =  Документы.ВСД_Производство.ПолучитьФормуВыбора(, Элемент);
    ФормаВыбора.РежимВыбора = Истина;
    ФормаВыбора.Отбор.Производитель_ХозСубъект.Установить(Отправитель_ХозСубъект, Истина);
    ФормаВыбора.Открыть();
КонецПроцедуры

Процедура ВСД_ИсходящийНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
 	ФормаВыбора =  Документы.ВСД.ПолучитьФормуВыбора(, Элемент);
    ФормаВыбора.РежимВыбора = Истина;
    ФормаВыбора.Отбор.Отправитель_ХозСубъект.Установить(Отправитель_ХозСубъект, Истина);
    ФормаВыбора.Открыть();
КонецПроцедуры

Процедура ВСД_АннулируемыйНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
 	ФормаВыбора =  Документы.ВСД.ПолучитьФормуВыбора(, Элемент);
    ФормаВыбора.РежимВыбора = Истина;
    ФормаВыбора.Отбор.Отправитель_ХозСубъект.Установить(Отправитель_ХозСубъект, Истина);
    ФормаВыбора.Открыть();
КонецПроцедуры

//ЖД ************ Фильтры Площадок по ХС - выбор на форме
Процедура Отправитель_ПлощадкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
   	ФормаВыбора =  Справочники.ВСД_Площадка.ПолучитьФормуВыбора(, Элемент);
    ФормаВыбора.РежимВыбора = Истина;
    ФормаВыбора.Отбор.GuidХозСубъекта.Установить(Отправитель_ХозСубъект.GUID, Истина);
    ФормаВыбора.Открыть();	
КонецПроцедуры

Процедура ВыбПлощадкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
   	ФормаВыбора =  Справочники.ВСД_Площадка.ПолучитьФормуВыбора(, Элемент);
    ФормаВыбора.РежимВыбора = Истина;
    ФормаВыбора.Отбор.GuidХозСубъекта.Установить(ЭтаФорма.ВыбХС.GUID, Истина);
    ФормаВыбора.Открыть();
КонецПроцедуры

Процедура Отправить_ВСД2_Производство_ИзСпискаПартий()
	СЗДок = Новый СписокЗначений;
	Для Каждого стр из Партии Цикл				
		Если НЕ(ЗначениеЗаполнено(стр.ВСД_Производство)) Тогда
			Продолжить;
		КонецЕсли;
		Если стр.ВСД_Производство.Проведен Тогда
			Продолжить	
		КонецЕсли;
		СЗДок.Добавить(стр.ВСД_Производство);
	КонецЦикла;
	ОтправитьВсе_ВСД2_Производство(СзДок,ДатаНачалаОтбора,ДатаОкончанияОтбора);	
КонецПроцедуры

//ЖД Создание Производства по Реализации, Отправка
Процедура кнПроизводствоНажатие(Элемент)
	СЗМеню = Новый СписокЗначений;
    СЗМеню.Добавить("Создать_ВСД_Производство","Создать ВСД Производство");
    СЗМеню.Добавить("Отправить_ВСД_Производство","Отправить ВСД Производство");
	
	ВыбранныйЭлемент = ВыбратьИзСписка(СЗМеню, ЭлементыФОрмы.кнПроизводство);	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ВыбЗн = ВыбранныйЭлемент.Значение;
	Если ВыбЗн = "Создать_ВСД_Производство" Тогда
		Создать_ВСД2_Производство();	
	ИначеЕсли ВыбЗн = "Отправить_ВСД_Производство" Тогда
		Отправить_ВСД2_Производство_ИзСпискаПартий();	
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаВыбораПериода2Нажатие(Элемент)
	Если НП.Редактировать() Тогда
		НачДатаПроизводство = НП.ПолучитьДатуНачала();
		КонДатаПроизводство = НП.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура кнОтправить_ВСД_ПроизводствоВСЕНажатие(Элемент)
	ТекстВопроса = "Отправить все ВСД_Производство по ХС "+Отправитель_ХозСубъект+"
	|за "+ПредставлениеПериода(НачДатаПроизводство,КонецДня(КонДатаПроизводство),"ФП=ИСТИНА")+" ?";
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
    	Возврат;
	КонецЕсли;
	ОтправитьВсе_ВСД2_Производство(,НачДатаПроизводство,КонДатаПроизводство);
КонецПроцедуры

Процедура кнПлощадкаПоХССоздатьНажатие(Элемент)
	Если НЕ(ЗначениеЗаполнено(ВыбХС)) Тогда
		Предупреждение("Выберите Хоз субъект");
		Возврат;
	КонецЕсли;
	Если НЕ(ЗначениеЗаполнено(ВыбХС.GUID)) Тогда
		Предупреждение("Хоз субъект не определен в ГИС Меркурий - Выполните поиск или Создайте");
		Возврат;
	КонецЕсли;
	
	СпрПл = Справочники.ВСД_Площадка.СоздатьЭлемент();
	//СпрПл.Код = ;
	СпрПл.Наименование = ВыбХС.Контрагент.Наименование;
	СпрПл.Контрагент = ВыбХС.Контрагент.Ссылка;
	//СпрПл.GUID = ;
	//СпрПл.UUID = ;
	//СпрПл.Адрес = ГМ.ПолучитьФактАдрес(ВыбХС.Контрагент);
	СпрПл.GuidХозСубъекта = ВыбХС.GUID;
	СпрПл.Записать();
	Сообщить("Создан ВСД_Площадка "+СпрПл);
	
	ВыбПлощадка = СпрПл.Ссылка;
КонецПроцедуры

Процедура ПолеВводаХСПриИзменении(Элемент)
	ВыбПлощадка = "";
КонецПроцедуры










