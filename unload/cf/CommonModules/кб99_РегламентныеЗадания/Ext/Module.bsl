
Процедура кб99_ВСД_УдалитьСтарыеЗапросы() Экспорт
	
	Организация = кб99_ВСД_Общий.ПолучитьОрганизациюПоУмолчанию();	
	ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры( Организация );	
	КоличествоДней = ПараметрыОрганизации["КоличествоДнейХраненияЗапросов"];
	КоличествоДней = ?(КоличествоДней = 0, 30, КоличествоДней);
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	кб99_Запросы.*
	|ИЗ
	|	РегистрСведений.кб99_Запросы КАК кб99_Запросы
	|ГДЕ
	|	кб99_Запросы.Период < &ПериодОчистки";
	Запрос.УстановитьПараметр("ПериодОчистки", ТекущаяДата() - КоличествоДней*86400);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.КонтурМеркурий_СтатусыВСД.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Прочитать();
		Запись.Удалить();
	КонецЦикла;	
	
КонецПроцедуры

Процедура кб99_ВСД_УдалитьЗапросы_XML() Экспорт
	
	Попытка
		Организация = кб99_ВСД_Общий.ПолучитьОрганизациюПоУмолчанию();	
		ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры( Организация );	
		КаталогЛогов = ПараметрыОрганизации["КаталогЛогов"];
		КоличествоДней = ПараметрыОрганизации["КоличествоДнейХраненияЗапросов"];
		КоличествоДней = ?(КоличествоДней = 0, 30, КоличествоДней);
		ДатаГраницы = ТекущаяДата() - КоличествоДней*86400;
		Файлы = НайтиФайлы(КаталогЛогов, "*.xml");
		Для Каждого Файл Из Файлы Цикл
			Если Файл.ПолучитьВремяИзменения() < ДатаГраницы Тогда
				УдалитьФайлы(Файл.ПолноеИмя);
			КонецЕсли;
		КонецЦикла;	
	Исключение
		кб99_ВСД.СообщитьОбОшибке(ОписаниеОшибки(),,"ВСД Ошибка при очистке файлов логов");
	КонецПопытки;
	
КонецПроцедуры

Процедура кб99_ПолучитьАктуальныеПартии(МассивПараметров) Экспорт
	
	Попытка
		Если ТипЗнч(МассивПараметров) <> Тип("Структура") Тогда
			кб99_ВСД.СообщитьОбОшибке(ОписаниеОшибки(),,"Ошибка при выполнение регламентного задания: Получить актуальные партии.");
			Возврат;
		КонецЕсли;
		
		СписокПлощадок = МассивПараметров.Площадки;
		Если СписокПлощадок.Количество() = 0 Тогда
			Возврат;	
		КонецЕсли;
		
		Организация = кб99_ВСД_Общий.ПолучитьОрганизациюПоУмолчанию();	
		ПараметрыОрганизации = кб99_ВСД.ЗагрузитьПараметры( Организация );
		
		ПараметрыОрганизации.Вставить("ПартииСмещение", 0);
		ПараметрыОрганизации.Вставить("УдалятьПартии", Ложь);
		ПараметрыОрганизации.Вставить("ТолькоАктуальныеПартии", Ложь);
		ПараметрыОрганизации.Вставить("ПартияКонПериода", ТекущаяДата());
		
		Для Каждого Площадка Из СписокПлощадок Цикл
			ПараметрыОрганизации.Вставить("ВыбПлощадка", Площадка.Значение);
			ПараметрыОрганизации.Вставить("ПартияНачПериода", Площадка.Значение.ДатаАктуальностиПартий);
			
			ИдентификаторЗадания = Неопределено;	
			
			НаименованиеЗадания = НСтр("ru = 'Регламентное задание - Ветис загрузка партий по площадке: '" + Площадка.Значение.Наименование);
			Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне( , 
			"кб99_ВСД_Запросы.Партии2_Запрос_Отправить_ВФоне",
			ПараметрыОрганизации,
			НаименованиеЗадания);
			
			ВСД_Площадка = Площадка.Значение.ПолучитьОбъект();
			ВСД_Площадка.ДатаАктуальностиПартий = ТекущаяДата();
			ВСД_Площадка.Записать();
		КонецЦикла;
	Исключение
		кб99_ВСД.СообщитьОбОшибке(ОписаниеОшибки(),,"Ошибка при выполнение регламентного задания: Получить актуальные партии.");
	КонецПопытки;

КонецПроцедуры
