
&НаСервере
Процедура ЗаполнитьОстаткиНаСервере( )
	
	Объект.Остатки1С.Очистить();
	Объект.ОстаткиМеркурий.Очистить();
	Объект.СверкаСходится.Очистить();
	Объект.СверкаКорректировка.Очистить();
	
	Запрос = Новый Запрос;
	ЗапросТекст = "ВЫБРАТЬ
	              |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	              |	ТоварыНаСкладахОстатки.Серия.ГоденДо КАК ДатаСрокГодностиСерия,
	              |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК ВНаличииОстаток
	              |ИЗ
	              |	РегистрНакопления.ТоварыНаСкладах.Остатки(&ВыбДата, Склад В (&ВыбСклады)) КАК ТоварыНаСкладахОстатки
	              |ГДЕ
	              |	ТоварыНаСкладахОстатки.Серия <> &СерияПустая
	              |	И ТоварыНаСкладахОстатки.ВНаличииОстаток > 0
	              |	И ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ(&ГруппаНоменклатуры)
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ТоварыНаСкладахОстатки.Номенклатура,
	              |	ТоварыНаСкладахОстатки.Серия.ГоденДо";
	Запрос.УстановитьПараметр("ВыбСклады", Объект.Площадка.Склады.Выгрузить(,"Склад") );
	Запрос.УстановитьПараметр( "ВыбДата", ТекущаяДата());
	Запрос.УстановитьПараметр( "ГруппаНоменклатуры", Объект.ГруппаНоменклатуры);
	
	Если  Объект.УчитыватьПустыеСерии Тогда
		ЗапросТекст=СтрЗаменить(ЗапросТекст,"ТоварыНаСкладахОстатки.Серия <> &СерияПустая
		|	И ТоварыНаСкладахОстатки.ВНаличииОстаток > 0","ТоварыНаСкладахОстатки.ВНаличииОстаток > 0");
	Иначе
		Запрос.УстановитьПараметр( "СерияПустая",Справочники.СерииНоменклатуры.ПустаяСсылка());
	КонецЕсли;
	
	запрос.Текст=ЗапросТекст;
	тзПартии = Запрос.Выполнить().Выгрузить();
	тзПартии.Колонки.Добавить("Цвет");
	тзПартии.Колонки.Добавить("Ошибки");
	тзПартии.Колонки.Добавить("ВСДСписок");
	тзПартии.Колонки.Добавить("КолВоСоотв");
	тзПартии.Колонки.Добавить("Количество");
	тзПартии.Колонки.Добавить("НоменклатураВесЧислитель");
	тзПартии.Колонки.Добавить("НоменклатураВесЗнаменатель");
	тзПартии.Колонки.Добавить("ПродукцияЭлемент");

	Для Каждого Стр Из тзПартии Цикл
		Стр.Ошибки = "";
		стр.НоменклатураВесЗнаменатель=?(стр.Номенклатура.ВесЗнаменатель=0,1,стр.Номенклатура.ВесЗнаменатель);
		стр.НоменклатураВесЧислитель=?(стр.Номенклатура.ВесЧислитель=0,1,стр.Номенклатура.ВесЧислитель);
		
		Продукция_Элемент = кб99_ВСД.Получить_ВСД_Продукция_Элемент(  Стр.Номенклатура );
		стр.Количество=стр.ВНаличииОстаток/стр.НоменклатураВесЗнаменатель*стр.НоменклатураВесЧислитель;
		стр.ПродукцияЭлемент=Продукция_Элемент;
		тзСписок= кб99_ВСД.Продукция_Элемент_ПолучитьСписок_ПоНоменклатуре( Стр.Номенклатура );
		стр.КолВоСоотв=тзСписок.количество();
		сп = новый списокЗначений;
		для каждого стрТЗСписок из  тзСписок цикл
			сп.Добавить(стрТЗСписок.ПродукцияЭлемент);
		конеццикла;
		стр.ВсдСписок=сп;
		стр.ВНаличииОстаток =стр.Количество;
		Если НЕ ЗначениеЗаполнено(Продукция_Элемент.ЕдиницаИзмерения) Тогда
			Стр.Ошибки = Стр.Ошибки + "Не заполнена ед. измерения ";
			Если НЕ ЗначениеЗаполнено(Продукция_Элемент.СрокГодности)	Тогда
				Стр.Ошибки = Стр.Ошибки +  " и срок годности.";
			КонецЕсли;
			Стр.Цвет = "Желтый";
		КонецЕсли;	
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура("ПродукцияЭлемент", Справочники.ВСД_Продукция_Элемент.ПустаяСсылка());// задаем условия
	МассивСтрок = тзПартии.НайтиСтроки(СтруктураОтбора);
	Для Каждого ЭлементМассив Из МассивСтрок Цикл
		тзПартии.Удалить(ЭлементМассив); //удаляем строки
	КонецЦикла;
	
	тзПартии.Сортировать("Номенклатура Возр");
	Объект.Остатки1С.Загрузить( тзПартии );	
	
	Если ПустаяСтрока(Объект.ГруппаНоменклатуры) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВСД_Партия.Ссылка КАК Партия,
		               |	ВСД_Партия.Продукция_Элемент КАК ПродукцияЭлемент,
		               |	ВСД_Партия.ДатаСрокГодности1 КАК СрокГодности1,
		               |	ВСД_Партия.ДатаСрокГодности2 КАК СрокГодности2,
		               |	ВСД_Партия.Количество КАК Количество,
		               |	ВСД_Партия.Количество КАК КоличествоПартии
		               |ИЗ
		               |	Справочник.ВСД_Партия КАК ВСД_Партия
		               |ГДЕ
		               |	ВСД_Партия.Получатель_Площадка = &Получатель_Площадка
		               |	И ВСД_Партия.Количество > 0
		               |	И ВСД_Партия.ПометкаУдаления = ЛОЖЬ";
		Запрос.УстановитьПараметр("Получатель_Площадка", Объект.Площадка );
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВСД_Партия.Ссылка КАК Партия,
		               |	ВСД_Партия.Продукция_Элемент КАК ПродукцияЭлемент,
		               |	ВСД_Партия.ДатаСрокГодности1 КАК СрокГодности1,
		               |	ВСД_Партия.ДатаСрокГодности2 КАК СрокГодности2,
		               |	ВСД_Партия.Количество КАК Количество,
		               |	ВСД_Партия.Количество КАК КоличествоПартии
		               |ИЗ
		               |	Справочник.ВСД_Партия КАК ВСД_Партия
		               |ГДЕ
		               |	ВСД_Партия.Получатель_Площадка = &Получатель_Площадка
		               |	И ВСД_Партия.Количество > 0
		               |	И ВСД_Партия.ПометкаУдаления = ЛОЖЬ
		               |	И ВСД_Партия.Продукция_Элемент В(&Продукция_Элемент)";
		Запрос.УстановитьПараметр("Получатель_Площадка", Объект.Площадка );
		
		сп=новый СписокЗначений;
		для каждого стрПартии из тзПартии цикл
			тзСписок= кб99_ВСД.Продукция_Элемент_ПолучитьСписок_ПоНоменклатуре( стрПартии.Номенклатура );
			для каждого стрТЗСписок из  тзСписок цикл
				сп.Добавить(стрТЗСписок.ПродукцияЭлемент);
			конеццикла;
		КонецЦикла;
		Запрос.УстановитьПараметр("Продукция_Элемент",сп );
	КонецЕсли;
	
	тзПартии = Запрос.Выполнить().Выгрузить();
	тзПартии.Колонки.Добавить("ДатаСрокГодности1");
	тзПартии.Колонки.Добавить("ДатаСрокГодности2");
	
	Для Каждого стрПартия из тзПартии Цикл
		стрПартия.ДатаСрокГодности1 = кб99_ВСД_Запросы.СтрокаВДатаВремя( стрПартия.СрокГодности1 );
		стрПартия.ДатаСрокГодности2 = кб99_ВСД_Запросы.СтрокаВДатаВремя( стрПартия.СрокГодности2 );
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВСД_Продукция_Элемент.Ссылка КАК Ссылка,
	               |	КОЛИЧЕСТВО(ВСД_Соответсвия.Ссылка) КАК КолвоСсылок
	               |ИЗ
	               |	Справочник.ВСД_Продукция_Элемент КАК ВСД_Продукция_Элемент
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВСД_Соответсвия КАК ВСД_Соответсвия
	               |		ПО (ВСД_Соответсвия.ПродукцияЭлемент = ВСД_Продукция_Элемент.Ссылка)
	               |			И (ВСД_Соответсвия.ПометкаУдаления = ЛОЖЬ)
	               |			И (ВСД_Соответсвия.ПродукцияЭлемент.ПометкаУдаления = ЛОЖЬ)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВСД_Продукция_Элемент.Ссылка";
	тзПЭ = Запрос.Выполнить().Выгрузить();
	тзПартии.Колонки.Добавить("Цвет");
	
	Для Каждого стрПЭ из тзПЭ Цикл
		Если стрПЭ.КолвоСсылок = 0 Тогда 
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ПродукцияЭлемент", стрПЭ.Ссылка);
			тзПартииОтбор = тзПартии.НайтиСтроки(ПараметрыОтбора);			
			
			Для Каждого стрПартия из тзПартииОтбор Цикл
				стрПартия.Цвет = "Красный";
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Объект.ОстаткиМеркурий.Загрузить( тзПартии );
	Объект.СверкаСходится.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстатки(Команда)
	
	ЗаполнитьОстаткиНаСервере( );
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСверкуНаСервере()
	
	Объект.СверкаСходится.Очистить();
	тзТовары = Объект.Остатки1С.Выгрузить();
	тзПартии = Объект.ОстаткиМеркурий.Выгрузить();
	
	// 1. Сходится
	Для Каждого строкаТовар из тзТовары Цикл
		
		Товар = строкаТовар.Номенклатура;
		тзПЭ = кб99_ВСД.Продукция_Элемент_ПолучитьСписок_ПоНоменклатуре( Товар );
		
		Для Каждого строкаПЭ из тзПЭ Цикл
			ПЭ = СтрокаПЭ.ПродукцияЭлемент;
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ПродукцияЭлемент", ПЭ);
			тзПартииОтбор = тзПартии.НайтиСтроки(ПараметрыОтбора);			
			
			Для Каждого стрПартия из тзПартииОтбор Цикл
				Если ( стрПартия.Количество >0 ) и (строкаТовар.Количество >0 ) Тогда 
					
					Если Объект.УчитыватьСрокГодности и ЗначениеЗаполнено( строкаТовар.ДатаСрокГодностиСерия ) Тогда 
						Если ЗначениеЗаполнено( стрПартия.ДатаСрокГодности2 ) Тогда 
							Если ( стрПартия.ДатаСрокГодности1 > строкаТовар.ДатаСрокГодностиСерия ) ИЛИ
								 ( стрПартия.ДатаСрокГодности2 < строкаТовар.ДатаСрокГодностиСерия ) Тогда 
								Продолжить;
							КонецЕсли;
						Иначе
							Если стрПартия.ДатаСрокГодности1 <> строкаТовар.ДатаСрокГодностиСерия Тогда 
								Продолжить;
							КонецЕсли;							
						КонецЕсли;
					КонецЕсли;
					
					
					стрСверка = Объект.СверкаСходится.Добавить();
					ЗаполнитьЗначенияСвойств( стрСверка, стрПартия );
					стрСверка.Номенклатура = Товар;
					стрСверка.ДатаСрокГодностиСерия = строкаТовар.ДатаСрокГодностиСерия;
					
					Если строкаТовар.Количество > стрПартия.Количество Тогда 						
						стрСверка.Количество = стрПартия.Количество;												
						строкаТовар.Количество = строкаТовар.Количество - стрПартия.Количество;
						стрПартия.Количество = 0;
						стрПартия.Откоректированно=Истина;
					Иначе
						стрСверка.Количество = строкаТовар.Количество;						
						стрПартия.Откоректированно=Истина;
						стрПартия.Количество = стрПартия.Количество - строкаТовар.Количество;
						строкаТовар.Количество = 0;

					КонецЕсли;	
					если стрсверка.количество=стрсверка.партия.количество тогда
					стрсверка.цвет="Зеленый";	
					конецесли;
				КонецЕсли;						
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	// 1. Корректировка
	тзПартии.Сортировать("ДатаСрокГодности1 Убыв, ДатаСрокГодности2 Убыв");
	Для Каждого строкаТовар из тзТовары Цикл
		
		Товар = строкаТовар.Номенклатура;
		тзПЭ = кб99_ВСД.Продукция_Элемент_ПолучитьСписок_ПоНоменклатуре( Товар );
		
		Для Каждого строкаПЭ из тзПЭ Цикл
			ПЭ = СтрокаПЭ.ПродукцияЭлемент;
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ПродукцияЭлемент", ПЭ);
			тзПартииОтбор = тзПартии.НайтиСтроки(ПараметрыОтбора);			
			
			Для Каждого стрПартия из тзПартииОтбор Цикл
				если не стрПартия.Откоректированно тогда
				Если ( стрПартия.Количество >0 ) и (строкаТовар.Количество >0 ) Тогда 
					
					стрСверка = Объект.СверкаКорректировка.Добавить();
					ЗаполнитьЗначенияСвойств( стрСверка, стрПартия );
					стрСверка.Номенклатура = Товар;
					стрСверка.ДатаСрокГодностиСерия = строкаТовар.ДатаСрокГодностиСерия;
					
					Если строкаТовар.Количество > стрПартия.Количество Тогда 						
						стрСверка.Количество = стрПартия.Количество;												
						строкаТовар.Количество = строкаТовар.Количество - стрПартия.Количество;
						стрПартия.Количество = 0;
						стрПартия.Откоректированно=Истина;

					Иначе
						стрСверка.Количество = строкаТовар.Количество;						
						стрПартия.Количество = стрПартия.Количество - строкаТовар.Количество;
						строкаТовар.Количество = 0;
						стрПартия.Откоректированно=Истина;

					КонецЕсли;						
				КонецЕсли;
				конецесли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	
	Объект.Остатки1С.Загрузить( тзТовары );
	Объект.ОстаткиМеркурий.Загрузить( тзПартии );
	тзПартии.Колонки.Добавить("Удалить");
	для каждого стрТЗ из тзПартии цикл
		если стрТЗ.количество<>стрТЗ.партия.количество тогда
			стртз.Удалить=1;
		конецесли;
	конеццикла;
	УдаляемыеСтроки = тзПартии.НайтиСтроки(Новый Структура("Удалить",1));
	Для каждого СтрокаТаблицы Из УдаляемыеСтроки Цикл
		тзПартии.Удалить(СтрокаТаблицы)
	КонецЦикла;
	Объект.ОстаткиМеркурийУдаление.Загрузить( тзПартии );
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСверку(Команда)
	
	ЗаполнитьОстаткиНаСервере();
	
	ЗаполнитьСверкуНаСервере();
	
КонецПроцедуры

&НаСервере
Функция КорректировкаСроковГодности()
	
	ДокВСД = Документы.ВСД2_Инвентаризация.СоздатьДокумент();
	
	ДокВСД.Дата = ТекущаяДата(); 
	ДокВСД.Организация = Объект.Организация;
	ДокВСД.Владелец_ХозСубъект = Объект.ХозСубъект;
	ДокВСД.Владелец_площадка = Объект.Площадка;
	ДокВСД.ПричинаРасхождения = "Инвентаризация партий";
	ДокВСД.ОписаниеНесоответствия = "Инвентаризация партий";
	
	Партии = Объект.СверкаКорректировка.Выгрузить();
	
	Для Каждого СтрПартии Из Партии Цикл
		Если НЕ(СтрПартии.Отметка) Тогда
			Продолжить;
		КонецЕсли;

		Если ЗначениеЗаполнено(СтрПартии.ДатаСрокГодности1) Тогда
			НоваяСтрока = ДокВСД.Продукция.Добавить();
			НоваяСтрока.Партия				= СтрПартии.Партия;
			НоваяСтрока.Продукция_Элемент 	= СтрПартии.ПродукцияЭлемент;
			НоваяСтрока.Количество 			= СтрПартии.Количество;
			НоваяСтрока.Продукция 			= НоваяСтрока.Продукция_Элемент.Продукция;
			НоваяСтрока.ВидПродукции 		= НоваяСтрока.Продукция_Элемент.ВидПродукции;
			НоваяСтрока.ЕдиницаИзмерения 	= НоваяСтрока.Партия.ЕдиницаИзмерения;
			Если Не ЗначениеЗаполнено( НоваяСтрока.ЕдиницаИзмерения ) Тогда 
				кб99_ВСД.СообщитьИнфо("Не заполнена ЕдиницаИзмерения в "+НоваяСтрока.Партия);	
			КонецЕсли;
			НоваяСтрока.НаименованиеПродукции = НоваяСтрока.Продукция_Элемент.Наименование;
			СтрДата1 = НоваяСтрока.Партия.ДатаИзготовления1;
			НоваяСтрока.ДатаИзготовления1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(СтрДата1);
			НоваяСтрока.ДатаСрокГодности1 = СтрПартии.ДатаСрокГодностиСерия;
			НоваяСтрока.Производитель_площадка = НоваяСтрока.Партия.Производитель_Площадка;
			НоваяСтрока.Производитель_Страна = НоваяСтрока.Производитель_площадка.Страна;
		КонецЕсли;
	КонецЦикла;
	
	ДокВСД.Записать();

	Возврат ДокВСД.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура СоздатьИнвентаризациюДаты(Ответ,Парам) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДокВСД = КорректировкаСроковГодности();
		ОткрытьФорму("Документ.ВСД2_Инвентаризация.ФормаОбъекта",Новый Структура("Ключ", ДокВСД));	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура кнКорректировкаДаты(Команда)
		
	ТВопроса = "Создать ВСД2_Инвентаризация по списку корректировки сроков годности ?";
    Оповещение = Новый ОписаниеОповещения("СоздатьИнвентаризациюДаты",ЭтаФорма);	
    ПоказатьВопрос(Оповещение, ТВопроса, РежимДиалогаВопрос.ДаНет,  0, КодВозвратаДиалога.Да, ""   ); 	
	
КонецПроцедуры

&НаКлиенте
Процедура кнОтметитьВсе(Команда)
	
	Для Каждого Стр Из Объект.СверкаКорректировка Цикл
		Стр.Отметка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура кнСнятьВсе(Команда)
	
	Для Каждого Стр Из Объект.СверкаКорректировка Цикл
		Стр.Отметка = Ложь;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция КорректировкаОстатков()
		
	ДокВСД = Документы.ВСД2_Инвентаризация.СоздатьДокумент();
	
	ДокВСД.Дата = ТекущаяДата(); 
	ДокВСД.Организация = Объект.Организация;
	ДокВСД.Владелец_ХозСубъект = Объект.ХозСубъект;
	ДокВСД.Владелец_площадка = Объект.Площадка;
	ДокВСД.ПричинаРасхождения = "Инвентаризация партий";
	ДокВСД.ОписаниеНесоответствия = "Инвентаризация партий";
	
	тзОстатки1с = Объект.Остатки1С.Выгрузить();
	тзОстаткиМеркурий = Объект.ОстаткиМеркурий.Выгрузить();
	
	Для Каждого СтрОстатки1с Из тзОстатки1с Цикл
		Если ЗначениеЗаполнено(СтрОстатки1с.Количество) Тогда
			НоваяСтрока = ДокВСД.Продукция.Добавить();
			НоваяСтрока.Продукция_Элемент = кб99_ВСД.Получить_ВСД_Продукция_Элемент(  СтрОстатки1с.Номенклатура );
			НоваяСтрока.Количество 			= СтрОстатки1с.Количество;
			НоваяСтрока.Продукция 			= НоваяСтрока.Продукция_Элемент.Продукция;
			НоваяСтрока.ВидПродукции 		= НоваяСтрока.Продукция_Элемент.ВидПродукции;
			НоваяСтрока.ЕдиницаИзмерения 	= НоваяСтрока.Продукция_Элемент.ЕдиницаИзмерения;
			Если Не ЗначениеЗаполнено( НоваяСтрока.ЕдиницаИзмерения ) Тогда 
				кб99_ВСД.СообщитьИнфо("Не заполнена ЕдиницаИзмерения в "+НоваяСтрока.Продукция_Элемент);	
			КонецЕсли;
			НоваяСтрока.НаименованиеПродукции = НоваяСтрока.Продукция_Элемент.Наименование;
			НоваяСтрока.ДатаСрокГодности1 = СтрОстатки1с.ДатаСрокГодностиСерия;
			НоваяСтрока.ДатаИзготовления1 = НоваяСтрока.ДатаСрокГодности1 - НоваяСтрока.Продукция_Элемент.СрокГодности *86400;
			НоваяСтрока.Производитель_площадка = НоваяСтрока.Продукция_Элемент.Площадка;
			НоваяСтрока.Производитель_Страна = НоваяСтрока.Производитель_площадка.Страна;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрПартии Из тзОстаткиМеркурий Цикл
		если СтрПартии.Количество=СтрПартии.Партия.Количество тогда
		Если СтрПартии.Количество > 0 И НЕ СтрПартии.Цвет = "Красный" Тогда
			НоваяСтрока = ДокВСД.Продукция.Добавить();
			НоваяСтрока.Партия				= СтрПартии.Партия;
			НоваяСтрока.Продукция_Элемент 	= СтрПартии.ПродукцияЭлемент;
			НоваяСтрока.Количество 			= 0;
			НоваяСтрока.Продукция 			= НоваяСтрока.Продукция_Элемент.Продукция;
			НоваяСтрока.ВидПродукции 		= НоваяСтрока.Продукция_Элемент.ВидПродукции;
			НоваяСтрока.ЕдиницаИзмерения 	= НоваяСтрока.Партия.ЕдиницаИзмерения;
			НоваяСтрока.НаименованиеПродукции = НоваяСтрока.Продукция_Элемент.Наименование;
			СтрДата1 = НоваяСтрока.Партия.ДатаИзготовления1;
			НоваяСтрока.ДатаИзготовления1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(СтрДата1);
			НоваяСтрока.ДатаСрокГодности1 = СтрПартии.ДатаСрокГодности1;
			СтрДата2 = НоваяСтрока.Партия.ДатаИзготовления2;
			НоваяСтрока.ДатаИзготовления2 = кб99_ВСД_Запросы.СтрокаВДатаВремя(СтрДата2);
			НоваяСтрока.ДатаСрокГодности2 = СтрПартии.ДатаСрокГодности2;
			НоваяСтрока.Производитель_площадка = НоваяСтрока.Партия.Производитель_Площадка;
			НоваяСтрока.Производитель_Страна = НоваяСтрока.Производитель_площадка.Страна;
		КонецЕсли;
		конецесли;
	КонецЦикла;
	
	ДокВСД.Записать();

	Возврат ДокВСД.Ссылка;

КонецФункции

&НаКлиенте
Процедура СоздатьИнвентаризациюОстатки(Ответ,Парам) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДокВСД = КорректировкаОстатков();
		ОткрытьФорму("Документ.ВСД2_Инвентаризация.ФормаОбъекта",Новый Структура("Ключ", ДокВСД));	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура кнКорректировкаОстатков(Команда)
			
	ТВопроса = "Создать ВСД2_Инвентаризация для корректировки остатков партий ?";
    Оповещение = Новый ОписаниеОповещения("СоздатьИнвентаризациюОстатки",ЭтаФорма);	
    ПоказатьВопрос(Оповещение, ТВопроса, РежимДиалогаВопрос.ДаНет,  0, КодВозвратаДиалога.Да, ""   ); 	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.УчитыватьСрокГодности=Истина;
КонецПроцедуры

&НаКлиенте
Процедура Остатки1СПриАктивизацииСтроки(Элемент)
	
	если Объект.Фильтровать тогда
		если Элемент.ТекущиеДанные<>Неопределено тогда 
			СписокСравнения = ЭтаФорма.Элементы.ОстаткиМеркурий; 
			СписокСравнения.ОтборСтрок = Новый ФиксированнаяСтруктура("ПродукцияЭлемент",  Элемент.ТекущиеДанные.ПродукцияЭлемент );
			СписокСравненияОстатки= ЭтаФорма.Элементы.Сверка;
			СписокСравненияОстатки.ОтборСтрок = Новый ФиксированнаяСтруктура("Номенклатура", Элемент.ТекущиеДанные.Номенклатура);
			СписокСравненияОстаткиЕМЕ= ЭтаФорма.Элементы.СверкаКорректировка;
			СписокСравненияОстаткиЕМЕ.ОтборСтрок = Новый ФиксированнаяСтруктура("Номенклатура", Элемент.ТекущиеДанные.Номенклатура);
		конецесли;
	иначе
		ЭтаФорма.Элементы.ОстаткиМеркурий.ОтборСтрок =Неопределено; 
		ЭтаФорма.Элементы.Сверка.ОтборСтрок =Неопределено;
		ЭтаФорма.Элементы.СверкаКорректировка.ОтборСтрок =Неопределено;
	конецесли;

КонецПроцедуры

&НаСервере
Функция КорректировкаОстатковСошлось()
		
	ДокВСД = Документы.ВСД2_Инвентаризация.СоздатьДокумент();
	
	ДокВСД.Дата = ТекущаяДата(); 
	ДокВСД.Организация = Объект.Организация;
	ДокВСД.Владелец_ХозСубъект = Объект.ХозСубъект;
	ДокВСД.Владелец_площадка = Объект.Площадка;
	ДокВСД.ПричинаРасхождения = "Инвентаризация партий";
	ДокВСД.ОписаниеНесоответствия = "Инвентаризация партий";
	
	тзОстатки1с = Объект.СверкаСходится.Выгрузить();
	тзостатки1с.Свернуть("ПродукцияЭлемент,Партия","Количество");
	
	Для Каждого СтрОстатки1с Из тзОстатки1с Цикл
		Если СтрОстатки1с.Количество<>СтрОстатки1с.Партия.Количество Тогда
			НоваяСтрока = ДокВСД.Продукция.Добавить();
			НоваяСтрока.Продукция_Элемент = СтрОстатки1с.ПродукцияЭлемент;
			НоваяСтрока.Количество 			= СтрОстатки1с.Количество;
			НоваяСтрока.Партия 			= СтрОстатки1с.Партия;
			НоваяСтрока.Продукция 			= СтрОстатки1с.ПродукцияЭлемент.Продукция;
			НоваяСтрока.ВидПродукции 		= СтрОстатки1с.ПродукцияЭлемент.ВидПродукции;
			НоваяСтрока.ЕдиницаИзмерения 	= НоваяСтрока.Продукция_Элемент.ЕдиницаИзмерения;
			Если Не ЗначениеЗаполнено( НоваяСтрока.ЕдиницаИзмерения ) Тогда 
				кб99_ВСД.СообщитьИнфо("Не заполнена ЕдиницаИзмерения в "+НоваяСтрока.Продукция_Элемент);	
			КонецЕсли;
			НоваяСтрока.НаименованиеПродукции = НоваяСтрока.Продукция_Элемент.Наименование;
			НоваяСтрока.ДатаСрокГодности1 =кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаСрокГодности1);
			НоваяСтрока.ДатаСрокГодности2 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаСрокГодности2);

			НоваяСтрока.ДатаИзготовления1 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаИзготовления1);
			НоваяСтрока.ДатаИзготовления2 = кб99_ВСД_Запросы.СтрокаВДатаВремя(НоваяСтрока.Партия.ДатаИзготовления2);
			
			НоваяСтрока.Производитель_площадка =  СтрОстатки1с.Партия.Производитель_Площадка;
			НоваяСтрока.Производитель_Страна = НоваяСтрока.Производитель_площадка.Страна;
		КонецЕсли;
	КонецЦикла;
		
	ДокВСД.Записать();

	Возврат ДокВСД.Ссылка;

КонецФункции

&НаКлиенте
Процедура ОткорректироватьНаСервере(Ответ,Парам) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДокВСД = КорректировкаОстатковСошлось();
		ОткрытьФорму("Документ.ВСД2_Инвентаризация.ФормаОбъекта",Новый Структура("Ключ", ДокВСД));	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Откорректировать(Команда)
	
	ТВопроса = "Создать ВСД2_Инвентаризация для корректировки остатков партий ?";
    Оповещение = Новый ОписаниеОповещения("ОткорректироватьНаСервере",ЭтаФорма);	
    ПоказатьВопрос(Оповещение, ТВопроса, РежимДиалогаВопрос.ДаНет,  0, КодВозвратаДиалога.Да, ""   ); 	
	
КонецПроцедуры


