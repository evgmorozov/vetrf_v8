&НаКлиенте
Перем мПредставлениеПустогоРасписания;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	мПредставлениеПустогоРасписания = Строка(Новый РасписаниеРегламентногоЗадания);
	ОбновитьПредставлениеРасписания();
КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	
	ЗаписатьПараметрыРегламентногоЗадания();
	Закрыть();

КонецПроцедуры

&НаСервере
Процедура ЗаписатьПараметрыРегламентногоЗадания()
	
	//Очистить регистр сведений кб99_Запросы
	РегламентноеЗаданиеОбъект = СоздатьРегламентноеЗаданиеПриНеобходимости("кб99_ВСД_УдалитьЗапросы");
	Если РасписаниеРегламентногоЗаданияКб99_ВСД_УдалитьЗапросы = Неопределено И НЕ ИспользованиеОчиститьРС Тогда
		РасписаниеРегламентногоЗаданияКб99_ВСД_УдалитьЗапросы = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	РегламентноеЗаданиеОбъект.Расписание = РасписаниеРегламентногоЗаданияКб99_ВСД_УдалитьЗапросы;
	РегламентноеЗаданиеОбъект.Использование = ИспользованиеОчиститьРС;
	РегламентноеЗаданиеОбъект.КоличествоПовторовПриАварийномЗавершении = КоличествоПовторовПриАварийномЗавершенииОчиститьРС_Запросы;
	РегламентноеЗаданиеОбъект.ИнтервалПовтораПриАварийномЗавершении = ИнтервалПовтораПриАварийномЗавершенииОчиститьРС;
	
	РегламентноеЗаданиеОбъект.Записать();
	
	//Очистить внешнюю папку с лог Файлами
	РегламентноеЗаданиеОбъект = СоздатьРегламентноеЗаданиеПриНеобходимости("кб99_ВСД_УдалитьЗапросы_XML");
	Если РасписаниеРегламентногоЗаданияКБ99_ОчиститьВнешнююПапкуСЛогФайлами = Неопределено И НЕ ИспользованиеОчиститьРС Тогда
		РасписаниеРегламентногоЗаданияКБ99_ОчиститьВнешнююПапкуСЛогФайлами = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	РегламентноеЗаданиеОбъект.Расписание = РасписаниеРегламентногоЗаданияКБ99_ОчиститьВнешнююПапкуСЛогФайлами;
	РегламентноеЗаданиеОбъект.Использование = ИспользованиеОчиститьВнешФайлы;
	РегламентноеЗаданиеОбъект.КоличествоПовторовПриАварийномЗавершении = КоличествоПовторовПриАварийномЗавершенииОчиститьВнешнююПапкуСЛогФайлами;
	РегламентноеЗаданиеОбъект.ИнтервалПовтораПриАварийномЗавершении = ИнтервалПовтораПриАварийномЗавершенииОчиститьВнешнююПапкуСЛогФайлами;
	
	РегламентноеЗаданиеОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Функция НайтиРегламентноеЗадание(НаименованиеРегламентногоЗадания)
	
	РегламентноеЗаданиеОбъект = Неопределено;
	
	Отбор = Новый Структура("Наименование", НаименованиеРегламентногоЗадания);
	МассивЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	Если МассивЗаданий.Количество() <> 0 Тогда
		РегламентноеЗаданиеОбъект = МассивЗаданий[0];
	КонецЕсли;
	
	Возврат РегламентноеЗаданиеОбъект;
	
КонецФункции

&НаСервере
Функция СоздатьРегламентноеЗаданиеПриНеобходимости(НаименованиеРегламентногоЗадания)
	
	РегламентноеЗаданиеОбъект = НайтиРегламентноеЗадание(НаименованиеРегламентногоЗадания);
	
	// при необходимости создаем регл. задание
	Если РегламентноеЗаданиеОбъект = Неопределено Тогда
		РегламентноеЗаданиеОбъект = РегламентныеЗадания.СоздатьРегламентноеЗадание(НаименованиеРегламентногоЗадания);
		РегламентноеЗаданиеОбъект.Наименование = НаименованиеРегламентногоЗадания;
	КонецЕсли;
	
	Возврат РегламентноеЗаданиеОбъект;
	
КонецФункции

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	ИмяРасписания = ""+Команда.Имя;
	
	Если ИмяРасписания = "НастроитьРасписаниекб99_ВСД_УдалитьЗапросы" тогда
		РасписаниеРегламентногоЗадания = РасписаниеРегламентногоЗаданияКб99_ВСД_УдалитьЗапросы;
	Иначе
		РасписаниеРегламентногоЗадания = РасписаниеРегламентногоЗаданияКБ99_ОчиститьВнешнююПапкуСЛогФайлами;
	КонецЕсли;

	РедактированиеРасписаниеРегламентногоЗадания(ИмяРасписания,РасписаниеРегламентногоЗадания);

КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписаниеРегламентногоЗадания(ИмяРасписания,РасписаниеРегламентногоЗадания)
	
	
	// если расписание не инициализировано в форме на сервере, то создаем новое
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
		
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	ПараметрыФункции = Новый Структура("ИмяРасписания", ИмяРасписания);
	// открываем диалог для редактирования Расписания
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"РедактированиеРасписанияРегламентногоЗаданияПродолжение",       
		ЭтаФорма, ПараметрыФункции);  
		
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗаданияПродолжение (Расписание, ПараметрыФункции) Экспорт
	
	Если Расписание <> Неопределено Тогда 
		Если  ПараметрыФункции.ИмяРасписания = "НастроитьРасписаниекб99_ВСД_УдалитьЗапросы" тогда
			РасписаниеРегламентногоЗаданияКб99_ВСД_УдалитьЗапросы = Расписание;	
			
		Иначе 
			РасписаниеРегламентногоЗаданияКБ99_ОчиститьВнешнююПапкуСЛогФайлами = Расписание;	
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьПредставлениеРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеРасписания()
	
	//Очистить РС
	ПредставлениеРасписания = Строка(РасписаниеРегламентногоЗаданияКб99_ВСД_УдалитьЗапросы);
	
	Если ПредставлениеРасписания = мПредставлениеПустогоРасписания Тогда
		
		ПредставлениеРасписания = НСтр("ru = 'Расписание не задано'");
		
	КонецЕсли;
	
	Элементы.НастроитьРасписаниекб99_ВСД_УдалитьЗапросы.Заголовок = ПредставлениеРасписания;
	
	//ОчиститьВнешнююПапкуСЛогФайлами
	ПредставлениеРасписания = Строка(РасписаниеРегламентногоЗаданияКБ99_ОчиститьВнешнююПапкуСЛогФайлами);
	
	Если ПредставлениеРасписания = мПредставлениеПустогоРасписания Тогда
		
		ПредставлениеРасписания = НСтр("ru = 'Расписание не задано'");
		
	КонецЕсли;
	
	Элементы.НастроитьРасписаниекб99_ОчиститьВнешнююПапкуСлогФайлами.Заголовок = ПредставлениеРасписания;

	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РегламентноеЗадание_кб99_ВСД_УдалитьЗапросы = СоздатьРегламентноеЗаданиеПриНеобходимости("кб99_ВСД_УдалитьЗапросы");
	РегламентноеЗадание_кб99_ВСД_УдалитьЗапросы_XML = СоздатьРегламентноеЗаданиеПриНеобходимости("кб99_ВСД_УдалитьЗапросы_XML");
	РасписаниеРегламентногоЗаданияКб99_ВСД_УдалитьЗапросы =  РегламентноеЗадание_кб99_ВСД_УдалитьЗапросы.Расписание;
	РасписаниеРегламентногоЗаданияКБ99_ОчиститьВнешнююПапкуСЛогФайлами = РегламентноеЗадание_кб99_ВСД_УдалитьЗапросы_XML.Расписание; 
	ИспользованиеОчиститьРС =  РегламентноеЗадание_кб99_ВСД_УдалитьЗапросы.Использование;
	ИспользованиеОчиститьВнешФайлы = РегламентноеЗадание_кб99_ВСД_УдалитьЗапросы_XML.Использование;
	ИнтервалПовтораПриАварийномЗавершенииОчиститьРС = РегламентноеЗадание_кб99_ВСД_УдалитьЗапросы.ИнтервалПовтораПриАварийномЗавершении;
	КоличествоПовторовПриАварийномЗавершенииОчиститьРС_Запросы = РегламентноеЗадание_кб99_ВСД_УдалитьЗапросы.КоличествоПовторовПриАварийномЗавершении;
	ИнтервалПовтораПриАварийномЗавершенииОчиститьВнешнююПапкуСЛогФайлами = РегламентноеЗадание_кб99_ВСД_УдалитьЗапросы_XML.ИнтервалПовтораПриАварийномЗавершении;
	КоличествоПовторовПриАварийномЗавершенииОчиститьВнешнююПапкуСЛогФайлами = РегламентноеЗадание_кб99_ВСД_УдалитьЗапросы_XML.КоличествоПовторовПриАварийномЗавершении;
	
КонецПроцедуры

